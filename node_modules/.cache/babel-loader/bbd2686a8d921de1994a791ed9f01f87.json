{"ast":null,"code":"var _jsxFileName = \"/Users/sammi/Desktop/TherapyGo/src/pages/SchedulePage/Components/StaffInput/StaffInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './StaffInput.scss';\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { RiCloseCircleFill } from 'react-icons/ri';\nimport IconButton from '@material-ui/core/IconButton';\nimport SaveIcon from '@material-ui/icons/SaveRounded';\nimport { connect } from 'react-redux';\nimport { theme } from '../../../../colour';\nimport { putTodayStaffList } from '../../../../api/schedule';\nimport { fetchWeekSchedule } from '../../../../store/actions/scheduleAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StaffInput = props => {\n  _s();\n\n  const useStyles = makeStyles(themeStyle => ({\n    chip: {\n      margin: themeStyle.spacing(0.5),\n      padding: themeStyle.spacing(1),\n      height: '50%',\n      fontFamily: 'Quicksand',\n      fontSize: '1rem',\n      color: 'white',\n      fontWeight: 600,\n      deleteIconColorPrimary: 'red'\n    }\n  }));\n  const classes = useStyles();\n  const [todayStaffList, setTodayStaffList] = useState([]);\n  const [isClear, setIsClear] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const {\n    weekSchedule\n  } = props;\n  const weekList = weekSchedule;\n  const {\n    allStaffList\n  } = props;\n  const {\n    date\n  } = props;\n  const todayList = weekList.find(list => list.date === date);\n  useEffect(() => {\n    props.fetchWeekSchedule({\n      date\n    });\n  }, [isUpdate, date]);\n  useEffect(() => {\n    if (todayList != null) {\n      setTodayStaffList(todayList.staffList);\n    }\n  }, [todayList]);\n\n  const handleOnChange = (event, value) => {\n    setIsClear(!isClear);\n    if (value === null) return;\n    const staffName = value.firstName;\n    let i;\n\n    for (i = 0; i < todayStaffList.length; i += 1) {\n      if (todayStaffList[i] === staffName) {\n        return;\n      }\n    }\n\n    setTodayStaffList([...todayStaffList, value.firstName]);\n  };\n\n  const handleDelete = chipToDelete => () => setTodayStaffList(todayStaff => todayStaff.filter(item => item !== chipToDelete));\n\n  const updateStaffList = () => {\n    putTodayStaffList(date, todayStaffList).then(() => setIsUpdate(!isUpdate));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff-input\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"staff-input__upper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"staff-input__upper__guide\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Choose working staff for\", ' ', date, \":\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"staff-input__upper__selection\",\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"tags-outlined\",\n            options: allStaffList,\n            getOptionLabel: option => option.firstName,\n            filterSelectedOptions: true,\n            onChange: handleOnChange,\n            size: \"small\",\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              variant: \"outlined\",\n              label: \"All Staff List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, isClear, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"staff-input__lower\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"staff-input__lower__list\",\n          children: todayStaffList.map((staff, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: staff,\n            onDelete: handleDelete(staff),\n            color: \"primary\",\n            deleteIcon: /*#__PURE__*/_jsxDEV(RiCloseCircleFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this),\n            className: classes.chip\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            \"aria-label\": \"save staff list\",\n            className: \"staff-list__lower__save-button\",\n            onClick: updateStaffList,\n            children: /*#__PURE__*/_jsxDEV(SaveIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StaffInput, \"UgHNOOXse+Mai1kEsgOH3EUJZu8=\", true);\n\n_c = StaffInput;\n\nconst mapStateToProps = state => {\n  const {\n    schedule\n  } = state;\n  const {\n    weekSchedule,\n    allStaffList\n  } = schedule;\n  return {\n    weekSchedule,\n    allStaffList\n  };\n};\n\nconst mapActionsToProps = {\n  fetchWeekSchedule\n};\nexport default connect(mapStateToProps, mapActionsToProps)(StaffInput);\n\nvar _c;\n\n$RefreshReg$(_c, \"StaffInput\");","map":{"version":3,"sources":["/Users/sammi/Desktop/TherapyGo/src/pages/SchedulePage/Components/StaffInput/StaffInput.js"],"names":["React","useState","useEffect","ThemeProvider","makeStyles","TextField","Autocomplete","Chip","RiCloseCircleFill","IconButton","SaveIcon","connect","theme","putTodayStaffList","fetchWeekSchedule","StaffInput","props","useStyles","themeStyle","chip","margin","spacing","padding","height","fontFamily","fontSize","color","fontWeight","deleteIconColorPrimary","classes","todayStaffList","setTodayStaffList","isClear","setIsClear","isUpdate","setIsUpdate","weekSchedule","weekList","allStaffList","date","todayList","find","list","staffList","handleOnChange","event","value","staffName","firstName","i","length","handleDelete","chipToDelete","todayStaff","filter","item","updateStaffList","then","option","params","map","staff","index","mapStateToProps","state","schedule","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './StaffInput.scss';\nimport { ThemeProvider , makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { RiCloseCircleFill } from 'react-icons/ri';\nimport IconButton from '@material-ui/core/IconButton';\nimport SaveIcon from '@material-ui/icons/SaveRounded';\nimport { connect } from 'react-redux';\nimport { theme } from '../../../../colour';\nimport { putTodayStaffList } from '../../../../api/schedule';\nimport { fetchWeekSchedule } from '../../../../store/actions/scheduleAction';\n\nconst StaffInput = (props) => {\n  const useStyles = makeStyles((themeStyle) => ({\n    chip: {\n      margin: themeStyle.spacing(0.5),\n      padding: themeStyle.spacing(1),\n      height: '50%',\n      fontFamily: 'Quicksand',\n      fontSize: '1rem',\n      color: 'white',\n      fontWeight: 600,\n      deleteIconColorPrimary: 'red',\n    },\n  }));\n  const classes = useStyles();\n  const [todayStaffList, setTodayStaffList] = useState([]);\n  const [isClear, setIsClear] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const { weekSchedule } = props;\n  const weekList = weekSchedule;\n  const {allStaffList} = props;\n  const { date } = props;\n  const todayList = weekList.find((list) => list.date === date);\n\n  useEffect(() => {\n    props.fetchWeekSchedule({ date });\n  }, [isUpdate, date]);\n\n  useEffect(() => {\n    if (todayList != null) {\n      setTodayStaffList(todayList.staffList);\n    }\n  }, [todayList]);\n\n  const handleOnChange = (event, value) => {\n    setIsClear(!isClear);\n    if (value === null) return;\n    const staffName = value.firstName;\n    let i;\n    for (i = 0; i < todayStaffList.length; i += 1) {\n      if (todayStaffList[i] === staffName) {\n        return;\n      }\n    }\n    setTodayStaffList([...todayStaffList, value.firstName]);\n  };\n\n  const handleDelete = (chipToDelete) => () =>\n    setTodayStaffList((todayStaff) => todayStaff.filter((item) => item !== chipToDelete));\n\n  const updateStaffList = () => {\n    putTodayStaffList(date, todayStaffList).then(() => setIsUpdate(!isUpdate));\n  };\n\n  return (\n    <div className=\"staff-input\">\n      <ThemeProvider theme={theme}>\n        <div className=\"staff-input__upper\">\n          <div className=\"staff-input__upper__guide\">\n            <h2>\n              Choose working staff for \n              {' '}\n              {date}\n              :\n              {' '}\n            </h2>\n          </div>\n          <div className=\"staff-input__upper__selection\">\n            <Autocomplete\n              id=\"tags-outlined\"\n              options={allStaffList}\n              getOptionLabel={(option) => option.firstName}\n              filterSelectedOptions\n              onChange={handleOnChange}\n              key={isClear}\n              size=\"small\"\n              renderInput={(params) => (\n                <TextField {...params} variant=\"outlined\" label=\"All Staff List\" />\n              )}\n            />\n          </div>\n        </div>\n\n        <div className=\"staff-input__lower\">\n          <div className=\"staff-input__lower__list\">\n            {todayStaffList.map((staff, index) => (\n              <Chip\n                key={index}\n                label={staff}\n                onDelete={handleDelete(staff)}\n                color=\"primary\"\n                deleteIcon={<RiCloseCircleFill />}\n                className={classes.chip}\n              />\n              ))}\n          </div>\n          <div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"save staff list\"\n              className=\"staff-list__lower__save-button\"\n              onClick={updateStaffList}\n            >\n              <SaveIcon fontSize=\"large\" />\n            </IconButton>\n          </div>\n        </div>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { schedule } = state;\n  const { weekSchedule, allStaffList } = schedule;\n  return {\n    weekSchedule,\n    allStaffList,\n  };\n};\n\nconst mapActionsToProps = {\n  fetchWeekSchedule,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(StaffInput);\n"]},"metadata":{},"sourceType":"module"}