{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/appointmentSettingsGenerator.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.AppointmentSettingsGeneratorVirtualStrategy = exports.AppointmentSettingsGeneratorBaseStrategy = exports.AppointmentSettingsGenerator = void 0;\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _recurrence = require(\"./recurrence\");\n\nvar _utilsTimeZone = _interopRequireDefault(require(\"./utils.timeZone.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\n    return Array.from(iter);\n  }\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    return _arrayLikeToArray(arr);\n  }\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (\"undefined\" === typeof Symbol || !(Symbol.iterator in Object(arr))) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _e = void 0;\n\n  try {\n    for (var _s, _i = arr[Symbol.iterator](); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) {\n        break;\n      }\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && null != _i.return) {\n        _i.return();\n      }\n    } finally {\n      if (_d) {\n        throw _e;\n      }\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) {\n    return arr;\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar toMs = _date.default.dateToMilliseconds;\n\nvar AppointmentSettingsGenerator = function () {\n  function AppointmentSettingsGenerator(scheduler) {\n    this.scheduler = scheduler;\n    this.settingsStrategy = this.scheduler.isVirtualScrolling() ? new AppointmentSettingsGeneratorVirtualStrategy(this.scheduler) : new AppointmentSettingsGeneratorBaseStrategy(this.scheduler);\n  }\n\n  var _proto = AppointmentSettingsGenerator.prototype;\n\n  _proto.create = function (rawAppointment) {\n    return this.settingsStrategy.create(rawAppointment);\n  };\n\n  return AppointmentSettingsGenerator;\n}();\n\nexports.AppointmentSettingsGenerator = AppointmentSettingsGenerator;\n\nvar AppointmentSettingsGeneratorBaseStrategy = function () {\n  function AppointmentSettingsGeneratorBaseStrategy(scheduler) {\n    this.scheduler = scheduler;\n  }\n\n  var _proto2 = AppointmentSettingsGeneratorBaseStrategy.prototype;\n\n  _proto2.create = function (rawAppointment) {\n    var scheduler = this.scheduler;\n    var appointment = scheduler.createAppointmentAdapter(rawAppointment);\n\n    var itemResources = scheduler._resourcesManager.getResourcesFromItem(rawAppointment);\n\n    var isAllDay = this._isAllDayAppointment(rawAppointment);\n\n    var appointmentList = this._createAppointments(appointment, itemResources);\n\n    if (this._canProcessNotNativeTimezoneDates(appointment)) {\n      appointmentList = this._getProcessedNotNativeTimezoneDates(appointmentList, appointment);\n    }\n\n    var gridAppointmentList = this._createGridAppointmentList(appointmentList, appointment);\n\n    gridAppointmentList = this._cropAppointmentsByStartDayHour(gridAppointmentList, rawAppointment, isAllDay);\n    gridAppointmentList = this._getProcessedLongAppointmentsIfRequired(gridAppointmentList, appointment);\n\n    var appointmentInfos = this._createAppointmentInfos(gridAppointmentList, itemResources, isAllDay, appointment.isRecurrent);\n\n    return appointmentInfos;\n  };\n\n  _proto2._isAllDayAppointment = function (rawAppointment) {\n    return this.scheduler.appointmentTakesAllDay(rawAppointment) && this.workspace.supportAllDayRow();\n  };\n\n  _proto2._createAppointments = function (appointment, resources) {\n    var appointments = this._createRecurrenceAppointments(appointment, resources);\n\n    if (!appointment.isRecurrent && 0 === appointments.length) {\n      appointments.push({\n        startDate: appointment.startDate,\n        endDate: appointment.endDate\n      });\n    }\n\n    appointments = appointments.map(function (item) {\n      var startDate = item.startDate,\n          endDate = item.endDate;\n      var endTime = null === endDate || void 0 === endDate ? void 0 : endDate.getTime();\n\n      if (startDate.getTime() === endTime) {\n        endDate.setTime(endTime + toMs(\"minute\"));\n      }\n\n      return item;\n    });\n    return appointments;\n  };\n\n  _proto2._canProcessNotNativeTimezoneDates = function (appointment) {\n    var timeZoneName = this.scheduler.option(\"timeZone\");\n    var isTimeZoneSet = !(0, _type.isEmptyObject)(timeZoneName);\n\n    if (!isTimeZoneSet) {\n      return false;\n    }\n\n    if (!appointment.isRecurrent) {\n      return false;\n    }\n\n    return !_utilsTimeZone.default.isEqualLocalTimeZone(timeZoneName, appointment.startDate);\n  };\n\n  _proto2._getProcessedNotNativeDateIfCrossDST = function (date, offset) {\n    if (offset < 0) {\n      var newDate = new Date(date);\n      var newDateMinusOneHour = new Date(newDate);\n      newDateMinusOneHour.setHours(newDateMinusOneHour.getHours() - 1);\n      var newDateOffset = this.timeZoneCalculator.getOffsets(newDate).common;\n      var newDateMinusOneHourOffset = this.timeZoneCalculator.getOffsets(newDateMinusOneHour).common;\n\n      if (newDateOffset !== newDateMinusOneHourOffset) {\n        return 0;\n      }\n    }\n\n    return offset;\n  };\n\n  _proto2._getProcessedNotNativeTimezoneDates = function (appointmentList, appointment) {\n    var _this = this;\n\n    var startDateRange = appointment.startDate;\n    var endDateRange = appointmentList[appointmentList.length - 1].endDate;\n    var startDateRangeOffset = this.timeZoneCalculator.getOffsets(startDateRange).common;\n    var endDateRangeOffset = this.timeZoneCalculator.getOffsets(endDateRange).common;\n    var isChangeOffsetInRange = startDateRangeOffset !== endDateRangeOffset;\n\n    if (isChangeOffsetInRange) {\n      return appointmentList.map(function (a) {\n        var diffStartDateOffset = _this.timeZoneCalculator.getOffsets(appointment.startDate).common - _this.timeZoneCalculator.getOffsets(a.startDate).common;\n\n        var diffEndDateOffset = _this.timeZoneCalculator.getOffsets(appointment.endDate).common - _this.timeZoneCalculator.getOffsets(a.endDate).common;\n\n        diffStartDateOffset = _this._getProcessedNotNativeDateIfCrossDST(a.startDate, diffStartDateOffset);\n        diffEndDateOffset = _this._getProcessedNotNativeDateIfCrossDST(a.endDate, diffEndDateOffset);\n        var newStartDate = new Date(a.startDate.getTime() + diffStartDateOffset * toMs(\"hour\"));\n        var newEndDate = new Date(a.endDate.getTime() + diffEndDateOffset * toMs(\"hour\"));\n\n        var testNewStartDate = _this.timeZoneCalculator.createDate(newStartDate, {\n          path: \"toGrid\"\n        });\n\n        var testNewEndDate = _this.timeZoneCalculator.createDate(newEndDate, {\n          path: \"toGrid\"\n        });\n\n        if (appointment.duration > testNewEndDate.getTime() - testNewStartDate.getTime()) {\n          newEndDate = new Date(newStartDate.getTime() + appointment.duration);\n        }\n\n        return {\n          startDate: newStartDate,\n          endDate: newEndDate\n        };\n      });\n    }\n\n    return appointmentList;\n  };\n\n  _proto2._getProcessedLongAppointmentsIfRequired = function (gridAppointmentList, appointment) {\n    var _this2 = this;\n\n    var rawAppointment = appointment.source();\n    var allDay = this.scheduler.appointmentTakesAllDay(rawAppointment);\n    var dateRange = this.workspace.getDateRange();\n    var renderingStrategy = this.scheduler.getLayoutManager().getRenderingStrategyInstance();\n\n    if (renderingStrategy.needSeparateAppointment(allDay)) {\n      var longStartDateParts = [];\n      var resultDates = [];\n      gridAppointmentList.forEach(function (gridAppointment) {\n        var maxDate = new Date(dateRange[1]);\n        var endDateOfPart = renderingStrategy.normalizeEndDateByViewEnd(rawAppointment, gridAppointment.endDate);\n        longStartDateParts = _date.default.getDatesOfInterval(gridAppointment.startDate, endDateOfPart, {\n          milliseconds: _this2.scheduler.getWorkSpace().getIntervalDuration(allDay)\n        });\n        var list = longStartDateParts.filter(function (startDatePart) {\n          return new Date(startDatePart) < maxDate;\n        }).map(function (date) {\n          return {\n            startDate: date,\n            endDate: new Date(new Date(date).setMilliseconds(appointment.duration)),\n            source: gridAppointment.source\n          };\n        });\n        resultDates = resultDates.concat(list);\n      });\n      gridAppointmentList = resultDates;\n    }\n\n    return gridAppointmentList;\n  };\n\n  _proto2._createGridAppointmentList = function (appointmentList, appointment) {\n    var _this3 = this;\n\n    return appointmentList.map(function (source) {\n      var offsetDifference = appointment.startDate.getTimezoneOffset() - source.startDate.getTimezoneOffset();\n\n      if (0 !== offsetDifference && _this3._canProcessNotNativeTimezoneDates(appointment)) {\n        source.startDate = new Date(source.startDate.getTime() + offsetDifference * toMs(\"minute\"));\n        source.endDate = new Date(source.endDate.getTime() + offsetDifference * toMs(\"minute\"));\n      }\n\n      var startDate = _this3.timeZoneCalculator.createDate(source.startDate, {\n        path: \"toGrid\"\n      });\n\n      var endDate = _this3.timeZoneCalculator.createDate(source.endDate, {\n        path: \"toGrid\"\n      });\n\n      return {\n        startDate: startDate,\n        endDate: endDate,\n        source: source\n      };\n    });\n  };\n\n  _proto2._createExtremeRecurrenceDates = function (rawAppointment) {\n    var dateRange = this.workspace.getDateRange();\n    var startViewDate = this.scheduler.appointmentTakesAllDay(rawAppointment) ? _date.default.trimTime(dateRange[0]) : dateRange[0];\n    var commonTimeZone = this.scheduler.option(\"timeZone\");\n    var minRecurrenceDate = commonTimeZone ? this.timeZoneCalculator.createDate(startViewDate, {\n      path: \"fromGrid\"\n    }) : startViewDate;\n    var maxRecurrenceDate = commonTimeZone ? this.timeZoneCalculator.createDate(dateRange[1], {\n      path: \"fromGrid\"\n    }) : dateRange[1];\n    return [minRecurrenceDate, maxRecurrenceDate];\n  };\n\n  _proto2._createRecurrenceOptions = function (appointment, groupIndex) {\n    var _this4 = this;\n\n    var _this$_createExtremeR = this._createExtremeRecurrenceDates(appointment.source(), groupIndex),\n        _this$_createExtremeR2 = _slicedToArray(_this$_createExtremeR, 2),\n        minRecurrenceDate = _this$_createExtremeR2[0],\n        maxRecurrenceDate = _this$_createExtremeR2[1];\n\n    return {\n      rule: appointment.recurrenceRule,\n      exception: appointment.recurrenceException,\n      min: minRecurrenceDate,\n      max: maxRecurrenceDate,\n      firstDayOfWeek: this.scheduler.getFirstDayOfWeek(),\n      start: appointment.startDate,\n      end: appointment.endDate,\n      getPostProcessedException: function (date) {\n        var timeZoneName = _this4.scheduler.option(\"timeZone\");\n\n        if ((0, _type.isEmptyObject)(timeZoneName) || _utilsTimeZone.default.isEqualLocalTimeZone(timeZoneName, date)) {\n          return date;\n        }\n\n        var appointmentOffset = _this4.timeZoneCalculator.getOffsets(appointment.startDate).common;\n\n        var exceptionAppointmentOffset = _this4.timeZoneCalculator.getOffsets(date).common;\n\n        var diff = appointmentOffset - exceptionAppointmentOffset;\n        diff = _this4._getProcessedNotNativeDateIfCrossDST(date, diff);\n        return new Date(date.getTime() - diff * _date.default.dateToMilliseconds(\"hour\"));\n      }\n    };\n  };\n\n  _proto2._createRecurrenceAppointments = function (appointment, resources) {\n    var duration = appointment.duration;\n\n    var option = this._createRecurrenceOptions(appointment);\n\n    var generatedStartDates = (0, _recurrence.getRecurrenceProcessor)().generateDates(option);\n    return generatedStartDates.map(function (date) {\n      var utcDate = _utilsTimeZone.default.createUTCDateWithLocalOffset(date);\n\n      utcDate.setTime(utcDate.getTime() + duration);\n\n      var endDate = _utilsTimeZone.default.createDateFromUTCWithLocalOffset(utcDate);\n\n      return {\n        startDate: new Date(date),\n        endDate: endDate\n      };\n    });\n  };\n\n  _proto2._getGroupIndices = function (resources) {\n    var workspace = this.scheduler._workSpace;\n    return workspace._getGroupIndexes(resources);\n  };\n\n  _proto2._cropAppointmentsByStartDayHour = function (appointments, rawAppointment, isAllDay) {\n    var _this5 = this;\n\n    return appointments.map(function (appointment) {\n      var startDate = new Date(appointment.startDate);\n\n      var firstViewDate = _this5._getAppointmentFirstViewDate(appointment, rawAppointment);\n\n      var startDayHour = _this5._getViewStartDayHour(firstViewDate);\n\n      appointment.startDate = _this5._getAppointmentResultDate({\n        appointment: appointment,\n        rawAppointment: rawAppointment,\n        startDate: startDate,\n        startDayHour: startDayHour,\n        firstViewDate: firstViewDate\n      });\n      return appointment;\n    });\n  };\n\n  _proto2._getAppointmentFirstViewDate = function () {\n    return this.scheduler.getStartViewDate();\n  };\n\n  _proto2._getViewStartDayHour = function () {\n    return this.scheduler._getCurrentViewOption(\"startDayHour\");\n  };\n\n  _proto2._getAppointmentResultDate = function (options) {\n    var appointment = options.appointment,\n        rawAppointment = options.rawAppointment,\n        startDayHour = options.startDayHour,\n        firstViewDate = options.firstViewDate;\n    var startDate = options.startDate;\n    var resultDate = new Date(appointment.startDate);\n\n    if (this.scheduler.appointmentTakesAllDay(rawAppointment)) {\n      resultDate = _date.default.normalizeDate(startDate, firstViewDate);\n    } else {\n      if (startDate < firstViewDate) {\n        startDate = firstViewDate;\n      }\n\n      resultDate = _date.default.normalizeDate(appointment.startDate, startDate);\n    }\n\n    return _date.default.roundDateByStartDayHour(resultDate, startDayHour);\n  };\n\n  _proto2._createAppointmentInfos = function (gridAppointments, resources, allDay, recurrent) {\n    var _this6 = this;\n\n    var result = [];\n\n    var _loop = function (i) {\n      var coordinates = _this6.scheduler._workSpace.getCoordinatesByDateInGroup(gridAppointments[i].startDate, resources, allDay);\n\n      coordinates.forEach(function (coordinate) {\n        (0, _extend.extend)(coordinate, {\n          info: {\n            appointment: gridAppointments[i],\n            sourceAppointment: gridAppointments[i].source\n          }\n        });\n      });\n      result = result.concat(coordinates);\n    };\n\n    for (var i = 0; i < gridAppointments.length; i++) {\n      _loop(i);\n    }\n\n    return result;\n  };\n\n  _createClass(AppointmentSettingsGeneratorBaseStrategy, [{\n    key: \"timeZoneCalculator\",\n    get: function () {\n      return this.scheduler.timeZoneCalculator;\n    }\n  }, {\n    key: \"workspace\",\n    get: function () {\n      return this.scheduler.getWorkSpace();\n    }\n  }, {\n    key: \"viewDataProvider\",\n    get: function () {\n      return this.workspace.viewDataProvider;\n    }\n  }]);\n\n  return AppointmentSettingsGeneratorBaseStrategy;\n}();\n\nexports.AppointmentSettingsGeneratorBaseStrategy = AppointmentSettingsGeneratorBaseStrategy;\n\nvar AppointmentSettingsGeneratorVirtualStrategy = function (_AppointmentSettingsG) {\n  _inheritsLoose(AppointmentSettingsGeneratorVirtualStrategy, _AppointmentSettingsG);\n\n  function AppointmentSettingsGeneratorVirtualStrategy() {\n    return _AppointmentSettingsG.apply(this, arguments) || this;\n  }\n\n  var _proto3 = AppointmentSettingsGeneratorVirtualStrategy.prototype;\n\n  _proto3._createAppointmentInfos = function (gridAppointments, resources, allDay, recurrent) {\n    var _this7 = this;\n\n    var appointments = allDay ? gridAppointments : gridAppointments.filter(function (item) {\n      var source = item.source,\n          startDate = item.startDate,\n          endDate = item.endDate;\n      var groupIndex = source.groupIndex;\n      return _this7.viewDataProvider.isGroupIntersectDateInterval(groupIndex, startDate, endDate);\n    });\n\n    if (recurrent && this.isVerticalGrouping) {\n      return this._createRecurrentAppointmentInfos(appointments, resources, allDay);\n    }\n\n    return _AppointmentSettingsG.prototype._createAppointmentInfos.call(this, appointments, resources, allDay, recurrent);\n  };\n\n  _proto3._createRecurrentAppointmentInfos = function (gridAppointments, resources, allDay) {\n    var _this8 = this;\n\n    var result = [];\n    gridAppointments.forEach(function (appointment) {\n      var source = appointment.source;\n      var groupIndex = source.groupIndex;\n\n      var coordinate = _this8.workspace.getCoordinatesByDate(appointment.startDate, groupIndex, allDay);\n\n      if (coordinate) {\n        (0, _extend.extend)(coordinate, {\n          info: {\n            appointment: appointment,\n            sourceAppointment: source\n          }\n        });\n        result.push(coordinate);\n      }\n    });\n    return result;\n  };\n\n  _proto3._cropAppointmentsByStartDayHour = function (appointments, rawAppointment, isAllDay) {\n    var _this9 = this;\n\n    return appointments.filter(function (appointment) {\n      var firstViewDate = _this9._getAppointmentFirstViewDate(appointment, rawAppointment);\n\n      if (!firstViewDate) {\n        return false;\n      }\n\n      var startDayHour = _this9._getViewStartDayHour(firstViewDate);\n\n      var startDate = new Date(appointment.startDate);\n      appointment.startDate = _this9._getAppointmentResultDate({\n        appointment: appointment,\n        rawAppointment: rawAppointment,\n        startDate: startDate,\n        startDayHour: startDayHour,\n        firstViewDate: firstViewDate\n      });\n      return !isAllDay ? appointment.endDate > appointment.startDate : true;\n    });\n  };\n\n  _proto3._createRecurrenceAppointments = function (appointment, resources) {\n    var _this10 = this;\n\n    var duration = appointment.duration;\n    var result = [];\n    var groupIndices = this.isVerticalGrouping && this.workspace._getGroupCount() ? this._getGroupIndices(resources) : [0];\n    groupIndices.forEach(function (groupIndex) {\n      var option = _this10._createRecurrenceOptions(appointment, groupIndex);\n\n      var generatedStartDates = (0, _recurrence.getRecurrenceProcessor)().generateDates(option);\n      var recurrentInfo = generatedStartDates.map(function (date) {\n        var startDate = new Date(date);\n\n        var utcDate = _utilsTimeZone.default.createUTCDateWithLocalOffset(date);\n\n        utcDate.setTime(utcDate.getTime() + duration);\n\n        var endDate = _utilsTimeZone.default.createDateFromUTCWithLocalOffset(utcDate);\n\n        return {\n          startDate: startDate,\n          endDate: endDate,\n          groupIndex: groupIndex\n        };\n      });\n      result.push.apply(result, _toConsumableArray(recurrentInfo));\n    });\n    return result;\n  };\n\n  _proto3._getViewStartDayHour = function (firstViewDate) {\n    return firstViewDate.getHours();\n  };\n\n  _proto3._getAppointmentFirstViewDate = function (appointment, rawAppointment) {\n    var _this$scheduler$getWo = this.scheduler.getWorkSpace(),\n        viewDataProvider = _this$scheduler$getWo.viewDataProvider;\n\n    var groupIndex = appointment.source.groupIndex;\n    var startDate = appointment.startDate,\n        endDate = appointment.endDate;\n\n    var isAllDay = this._isAllDayAppointment(rawAppointment);\n\n    return viewDataProvider.findGroupCellStartDate(groupIndex, startDate, endDate, isAllDay);\n  };\n\n  _proto3._updateGroupIndices = function (appointments, itemResources) {\n    var _this11 = this;\n\n    var groupIndices = this.isVerticalGrouping ? this._getGroupIndices(itemResources) : [0];\n    var result = [];\n    groupIndices.forEach(function (groupIndex) {\n      var groupStartDate = _this11.viewDataProvider.getGroupStartDate(groupIndex);\n\n      if (groupStartDate) {\n        appointments.forEach(function (appointment) {\n          var appointmentCopy = (0, _extend.extend)({}, appointment);\n          appointmentCopy.groupIndex = groupIndex;\n          result.push(appointmentCopy);\n        });\n      }\n    });\n    return result;\n  };\n\n  _proto3._getGroupIndices = function (resources) {\n    var groupIndices = _AppointmentSettingsG.prototype._getGroupIndices.call(this, resources);\n\n    var _this$scheduler$getWo2 = this.scheduler.getWorkSpace(),\n        viewDataProvider = _this$scheduler$getWo2.viewDataProvider;\n\n    var viewDataGroupIndices = viewDataProvider.getGroupIndices();\n    var result = groupIndices.filter(function (groupIndex) {\n      return viewDataGroupIndices.indexOf(groupIndex) !== -1;\n    });\n    return result;\n  };\n\n  _proto3._createAppointments = function (appointment, resources) {\n    var appointments = _AppointmentSettingsG.prototype._createAppointments.call(this, appointment, resources);\n\n    return !appointment.isRecurrent ? this._updateGroupIndices(appointments, resources) : appointments;\n  };\n\n  _createClass(AppointmentSettingsGeneratorVirtualStrategy, [{\n    key: \"viewDataProvider\",\n    get: function () {\n      return this.workspace.viewDataProvider;\n    }\n  }, {\n    key: \"isVerticalGrouping\",\n    get: function () {\n      return this.workspace._isVerticalGroupedWorkSpace();\n    }\n  }]);\n\n  return AppointmentSettingsGeneratorVirtualStrategy;\n}(AppointmentSettingsGeneratorBaseStrategy);\n\nexports.AppointmentSettingsGeneratorVirtualStrategy = AppointmentSettingsGeneratorVirtualStrategy;","map":{"version":3,"sources":["/Users/sammi/Desktop/TherapyGo/node_modules/devextreme/ui/scheduler/appointmentSettingsGenerator.js"],"names":["exports","AppointmentSettingsGeneratorVirtualStrategy","AppointmentSettingsGeneratorBaseStrategy","AppointmentSettingsGenerator","_date","_interopRequireDefault","require","_type","_extend","_recurrence","_utilsTimeZone","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","Array","from","isArray","_arrayLikeToArray","_inheritsLoose","subClass","superClass","prototype","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","minLen","n","toString","call","slice","name","test","len","length","arr2","_arr","_n","_d","_e","_s","_i","next","done","push","value","err","return","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","Constructor","protoProps","staticProps","toMs","default","dateToMilliseconds","scheduler","settingsStrategy","isVirtualScrolling","_proto","rawAppointment","_proto2","appointment","createAppointmentAdapter","itemResources","_resourcesManager","getResourcesFromItem","isAllDay","_isAllDayAppointment","appointmentList","_createAppointments","_canProcessNotNativeTimezoneDates","_getProcessedNotNativeTimezoneDates","gridAppointmentList","_createGridAppointmentList","_cropAppointmentsByStartDayHour","_getProcessedLongAppointmentsIfRequired","appointmentInfos","_createAppointmentInfos","isRecurrent","appointmentTakesAllDay","workspace","supportAllDayRow","resources","appointments","_createRecurrenceAppointments","startDate","endDate","map","item","endTime","getTime","setTime","timeZoneName","option","isTimeZoneSet","isEmptyObject","isEqualLocalTimeZone","_getProcessedNotNativeDateIfCrossDST","date","offset","newDate","Date","newDateMinusOneHour","setHours","getHours","newDateOffset","timeZoneCalculator","getOffsets","common","newDateMinusOneHourOffset","_this","startDateRange","endDateRange","startDateRangeOffset","endDateRangeOffset","isChangeOffsetInRange","a","diffStartDateOffset","diffEndDateOffset","newStartDate","newEndDate","testNewStartDate","createDate","path","testNewEndDate","duration","_this2","source","allDay","dateRange","getDateRange","renderingStrategy","getLayoutManager","getRenderingStrategyInstance","needSeparateAppointment","longStartDateParts","resultDates","forEach","gridAppointment","maxDate","endDateOfPart","normalizeEndDateByViewEnd","getDatesOfInterval","milliseconds","getWorkSpace","getIntervalDuration","list","filter","startDatePart","setMilliseconds","concat","_this3","offsetDifference","getTimezoneOffset","_createExtremeRecurrenceDates","startViewDate","trimTime","commonTimeZone","minRecurrenceDate","maxRecurrenceDate","_createRecurrenceOptions","groupIndex","_this4","_this$_createExtremeR","_this$_createExtremeR2","rule","recurrenceRule","exception","recurrenceException","min","max","firstDayOfWeek","getFirstDayOfWeek","start","end","getPostProcessedException","appointmentOffset","exceptionAppointmentOffset","diff","generatedStartDates","getRecurrenceProcessor","generateDates","utcDate","createUTCDateWithLocalOffset","createDateFromUTCWithLocalOffset","_getGroupIndices","_workSpace","_getGroupIndexes","_this5","firstViewDate","_getAppointmentFirstViewDate","startDayHour","_getViewStartDayHour","_getAppointmentResultDate","getStartViewDate","_getCurrentViewOption","options","resultDate","normalizeDate","roundDateByStartDayHour","gridAppointments","recurrent","_this6","result","_loop","coordinates","getCoordinatesByDateInGroup","coordinate","extend","info","sourceAppointment","get","viewDataProvider","_AppointmentSettingsG","apply","arguments","_proto3","_this7","isGroupIntersectDateInterval","isVerticalGrouping","_createRecurrentAppointmentInfos","_this8","getCoordinatesByDate","_this9","_this10","groupIndices","_getGroupCount","recurrentInfo","_this$scheduler$getWo","findGroupCellStartDate","_updateGroupIndices","_this11","groupStartDate","getGroupStartDate","appointmentCopy","_this$scheduler$getWo2","viewDataGroupIndices","getGroupIndices","indexOf","_isVerticalGroupedWorkSpace"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACC,2CAAR,GAAsDD,OAAO,CAACE,wCAAR,GAAmDF,OAAO,CAACG,4BAAR,GAAuC,KAAK,CAArJ;;AACA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAlC;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAII,cAAc,GAAGL,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA3C;;AAEA,SAASD,sBAAT,CAAgCM,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AAED,SAASE,kBAAT,CAA4BC,GAA5B,EAAiC;AAC7B,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,2BAA2B,CAACH,GAAD,CAA/E,IAAwFI,kBAAkB,EAAjH;AACH;;AAED,SAASA,kBAAT,GAA8B;AAC1B,QAAM,IAAIC,SAAJ,CAAc,sIAAd,CAAN;AACH;;AAED,SAASH,gBAAT,CAA0BI,IAA1B,EAAgC;AAC5B,MAAI,gBAAgB,OAAOC,MAAvB,IAAiCA,MAAM,CAACC,QAAP,IAAmBC,MAAM,CAACH,IAAD,CAA9D,EAAsE;AAClE,WAAOI,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAP;AACH;AACJ;;AAED,SAASL,kBAAT,CAA4BD,GAA5B,EAAiC;AAC7B,MAAIU,KAAK,CAACE,OAAN,CAAcZ,GAAd,CAAJ,EAAwB;AACpB,WAAOa,iBAAiB,CAACb,GAAD,CAAxB;AACH;AACJ;;AAED,SAASc,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAC1CD,EAAAA,QAAQ,CAACE,SAAT,GAAqBR,MAAM,CAACS,MAAP,CAAcF,UAAU,CAACC,SAAzB,CAArB;AACAF,EAAAA,QAAQ,CAACE,SAAT,CAAmBE,WAAnB,GAAiCJ,QAAjC;;AACAK,EAAAA,eAAe,CAACL,QAAD,EAAWC,UAAX,CAAf;AACH;;AAED,SAASI,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAC3BF,EAAAA,eAAe,GAAGX,MAAM,CAACc,cAAP,IAAyB,UAASF,CAAT,EAAYC,CAAZ,EAAe;AACtDD,IAAAA,CAAC,CAACG,SAAF,GAAcF,CAAd;AACA,WAAOD,CAAP;AACH,GAHD;;AAIA,SAAOD,eAAe,CAACC,CAAD,EAAIC,CAAJ,CAAtB;AACH;;AAED,SAASG,cAAT,CAAwBzB,GAAxB,EAA6B0B,CAA7B,EAAgC;AAC5B,SAAOC,eAAe,CAAC3B,GAAD,CAAf,IAAwB4B,qBAAqB,CAAC5B,GAAD,EAAM0B,CAAN,CAA7C,IAAyDvB,2BAA2B,CAACH,GAAD,EAAM0B,CAAN,CAApF,IAAgGG,gBAAgB,EAAvH;AACH;;AAED,SAASA,gBAAT,GAA4B;AACxB,QAAM,IAAIxB,SAAJ,CAAc,2IAAd,CAAN;AACH;;AAED,SAASF,2BAAT,CAAqCkB,CAArC,EAAwCS,MAAxC,EAAgD;AAC5C,MAAI,CAACT,CAAL,EAAQ;AACJ;AACH;;AACD,MAAI,aAAa,OAAOA,CAAxB,EAA2B;AACvB,WAAOR,iBAAiB,CAACQ,CAAD,EAAIS,MAAJ,CAAxB;AACH;;AACD,MAAIC,CAAC,GAAGtB,MAAM,CAACQ,SAAP,CAAiBe,QAAjB,CAA0BC,IAA1B,CAA+BZ,CAA/B,EAAkCa,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;;AACA,MAAI,aAAaH,CAAb,IAAkBV,CAAC,CAACF,WAAxB,EAAqC;AACjCY,IAAAA,CAAC,GAAGV,CAAC,CAACF,WAAF,CAAcgB,IAAlB;AACH;;AACD,MAAI,UAAUJ,CAAV,IAAe,UAAUA,CAA7B,EAAgC;AAC5B,WAAOrB,KAAK,CAACC,IAAN,CAAWU,CAAX,CAAP;AACH;;AACD,MAAI,gBAAgBU,CAAhB,IAAqB,2CAA2CK,IAA3C,CAAgDL,CAAhD,CAAzB,EAA6E;AACzE,WAAOlB,iBAAiB,CAACQ,CAAD,EAAIS,MAAJ,CAAxB;AACH;AACJ;;AAED,SAASjB,iBAAT,CAA2Bb,GAA3B,EAAgCqC,GAAhC,EAAqC;AACjC,MAAI,QAAQA,GAAR,IAAeA,GAAG,GAAGrC,GAAG,CAACsC,MAA7B,EAAqC;AACjCD,IAAAA,GAAG,GAAGrC,GAAG,CAACsC,MAAV;AACH;;AACD,OAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWa,IAAI,GAAG,IAAI7B,KAAJ,CAAU2B,GAAV,CAAvB,EAAuCX,CAAC,GAAGW,GAA3C,EAAgDX,CAAC,EAAjD,EAAqD;AACjDa,IAAAA,IAAI,CAACb,CAAD,CAAJ,GAAU1B,GAAG,CAAC0B,CAAD,CAAb;AACH;;AACD,SAAOa,IAAP;AACH;;AAED,SAASX,qBAAT,CAA+B5B,GAA/B,EAAoC0B,CAApC,EAAuC;AACnC,MAAI,gBAAgB,OAAOnB,MAAvB,IAAiC,EAAEA,MAAM,CAACC,QAAP,IAAmBC,MAAM,CAACT,GAAD,CAA3B,CAArC,EAAwE;AACpE;AACH;;AACD,MAAIwC,IAAI,GAAG,EAAX;AACA,MAAIC,EAAE,GAAG,IAAT;AACA,MAAIC,EAAE,GAAG,KAAT;;AACA,MAAIC,EAAE,GAAG,KAAK,CAAd;;AACA,MAAI;AACA,SAAK,IAAIC,EAAJ,EAAQC,EAAE,GAAG7C,GAAG,CAACO,MAAM,CAACC,QAAR,CAAH,EAAlB,EAA0C,EAAEiC,EAAE,GAAG,CAACG,EAAE,GAAGC,EAAE,CAACC,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyEN,EAAE,GAAG,IAA9E,EAAoF;AAChFD,MAAAA,IAAI,CAACQ,IAAL,CAAUJ,EAAE,CAACK,KAAb;;AACA,UAAIvB,CAAC,IAAIc,IAAI,CAACF,MAAL,KAAgBZ,CAAzB,EAA4B;AACxB;AACH;AACJ;AACJ,GAPD,CAOE,OAAOwB,GAAP,EAAY;AACVR,IAAAA,EAAE,GAAG,IAAL;AACAC,IAAAA,EAAE,GAAGO,GAAL;AACH,GAVD,SAUU;AACN,QAAI;AACA,UAAI,CAACT,EAAD,IAAO,QAAQI,EAAE,CAACM,MAAtB,EAA8B;AAC1BN,QAAAA,EAAE,CAACM,MAAH;AACH;AACJ,KAJD,SAIU;AACN,UAAIT,EAAJ,EAAQ;AACJ,cAAMC,EAAN;AACH;AACJ;AACJ;;AACD,SAAOH,IAAP;AACH;;AAED,SAASb,eAAT,CAAyB3B,GAAzB,EAA8B;AAC1B,MAAIU,KAAK,CAACE,OAAN,CAAcZ,GAAd,CAAJ,EAAwB;AACpB,WAAOA,GAAP;AACH;AACJ;;AAED,SAASoD,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AACtC,OAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,KAAK,CAAChB,MAA1B,EAAkCZ,CAAC,EAAnC,EAAuC;AACnC,QAAI6B,UAAU,GAAGD,KAAK,CAAC5B,CAAD,CAAtB;AACA6B,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AACAD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;;AACA,QAAI,WAAWF,UAAf,EAA2B;AACvBA,MAAAA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AACH;;AACDjD,IAAAA,MAAM,CAACkD,cAAP,CAAsBN,MAAtB,EAA8BE,UAAU,CAACK,GAAzC,EAA8CL,UAA9C;AACH;AACJ;;AAED,SAASM,YAAT,CAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,WAA/C,EAA4D;AACxD,MAAID,UAAJ,EAAgB;AACZX,IAAAA,iBAAiB,CAACU,WAAW,CAAC7C,SAAb,EAAwB8C,UAAxB,CAAjB;AACH;;AACD,MAAIC,WAAJ,EAAiB;AACbZ,IAAAA,iBAAiB,CAACU,WAAD,EAAcE,WAAd,CAAjB;AACH;;AACD,SAAOF,WAAP;AACH;;AACD,IAAIG,IAAI,GAAG3E,KAAK,CAAC4E,OAAN,CAAcC,kBAAzB;;AACA,IAAI9E,4BAA4B,GAAG,YAAW;AAC1C,WAASA,4BAAT,CAAsC+E,SAAtC,EAAiD;AAC7C,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,gBAAL,GAAwB,KAAKD,SAAL,CAAeE,kBAAf,KAAsC,IAAInF,2CAAJ,CAAgD,KAAKiF,SAArD,CAAtC,GAAwG,IAAIhF,wCAAJ,CAA6C,KAAKgF,SAAlD,CAAhI;AACH;;AACD,MAAIG,MAAM,GAAGlF,4BAA4B,CAAC4B,SAA1C;;AACAsD,EAAAA,MAAM,CAACrD,MAAP,GAAgB,UAASsD,cAAT,EAAyB;AACrC,WAAO,KAAKH,gBAAL,CAAsBnD,MAAtB,CAA6BsD,cAA7B,CAAP;AACH,GAFD;;AAGA,SAAOnF,4BAAP;AACH,CAVkC,EAAnC;;AAWAH,OAAO,CAACG,4BAAR,GAAuCA,4BAAvC;;AACA,IAAID,wCAAwC,GAAG,YAAW;AACtD,WAASA,wCAAT,CAAkDgF,SAAlD,EAA6D;AACzD,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AACD,MAAIK,OAAO,GAAGrF,wCAAwC,CAAC6B,SAAvD;;AACAwD,EAAAA,OAAO,CAACvD,MAAR,GAAiB,UAASsD,cAAT,EAAyB;AACtC,QAAIJ,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIM,WAAW,GAAGN,SAAS,CAACO,wBAAV,CAAmCH,cAAnC,CAAlB;;AACA,QAAII,aAAa,GAAGR,SAAS,CAACS,iBAAV,CAA4BC,oBAA5B,CAAiDN,cAAjD,CAApB;;AACA,QAAIO,QAAQ,GAAG,KAAKC,oBAAL,CAA0BR,cAA1B,CAAf;;AACA,QAAIS,eAAe,GAAG,KAAKC,mBAAL,CAAyBR,WAAzB,EAAsCE,aAAtC,CAAtB;;AACA,QAAI,KAAKO,iCAAL,CAAuCT,WAAvC,CAAJ,EAAyD;AACrDO,MAAAA,eAAe,GAAG,KAAKG,mCAAL,CAAyCH,eAAzC,EAA0DP,WAA1D,CAAlB;AACH;;AACD,QAAIW,mBAAmB,GAAG,KAAKC,0BAAL,CAAgCL,eAAhC,EAAiDP,WAAjD,CAA1B;;AACAW,IAAAA,mBAAmB,GAAG,KAAKE,+BAAL,CAAqCF,mBAArC,EAA0Db,cAA1D,EAA0EO,QAA1E,CAAtB;AACAM,IAAAA,mBAAmB,GAAG,KAAKG,uCAAL,CAA6CH,mBAA7C,EAAkEX,WAAlE,CAAtB;;AACA,QAAIe,gBAAgB,GAAG,KAAKC,uBAAL,CAA6BL,mBAA7B,EAAkDT,aAAlD,EAAiEG,QAAjE,EAA2EL,WAAW,CAACiB,WAAvF,CAAvB;;AACA,WAAOF,gBAAP;AACH,GAdD;;AAeAhB,EAAAA,OAAO,CAACO,oBAAR,GAA+B,UAASR,cAAT,EAAyB;AACpD,WAAO,KAAKJ,SAAL,CAAewB,sBAAf,CAAsCpB,cAAtC,KAAyD,KAAKqB,SAAL,CAAeC,gBAAf,EAAhE;AACH,GAFD;;AAGArB,EAAAA,OAAO,CAACS,mBAAR,GAA8B,UAASR,WAAT,EAAsBqB,SAAtB,EAAiC;AAC3D,QAAIC,YAAY,GAAG,KAAKC,6BAAL,CAAmCvB,WAAnC,EAAgDqB,SAAhD,CAAnB;;AACA,QAAI,CAACrB,WAAW,CAACiB,WAAb,IAA4B,MAAMK,YAAY,CAAC1D,MAAnD,EAA2D;AACvD0D,MAAAA,YAAY,CAAChD,IAAb,CAAkB;AACdkD,QAAAA,SAAS,EAAExB,WAAW,CAACwB,SADT;AAEdC,QAAAA,OAAO,EAAEzB,WAAW,CAACyB;AAFP,OAAlB;AAIH;;AACDH,IAAAA,YAAY,GAAGA,YAAY,CAACI,GAAb,CAAiB,UAASC,IAAT,EAAe;AAC3C,UAAIH,SAAS,GAAGG,IAAI,CAACH,SAArB;AAAA,UACIC,OAAO,GAAGE,IAAI,CAACF,OADnB;AAEA,UAAIG,OAAO,GAAG,SAASH,OAAT,IAAoB,KAAK,CAAL,KAAWA,OAA/B,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,OAAR,EAAhE;;AACA,UAAIL,SAAS,CAACK,OAAV,OAAwBD,OAA5B,EAAqC;AACjCH,QAAAA,OAAO,CAACK,OAAR,CAAgBF,OAAO,GAAGrC,IAAI,CAAC,QAAD,CAA9B;AACH;;AACD,aAAOoC,IAAP;AACH,KARc,CAAf;AASA,WAAOL,YAAP;AACH,GAlBD;;AAmBAvB,EAAAA,OAAO,CAACU,iCAAR,GAA4C,UAAST,WAAT,EAAsB;AAC9D,QAAI+B,YAAY,GAAG,KAAKrC,SAAL,CAAesC,MAAf,CAAsB,UAAtB,CAAnB;AACA,QAAIC,aAAa,GAAG,CAAC,CAAC,GAAGlH,KAAK,CAACmH,aAAV,EAAyBH,YAAzB,CAArB;;AACA,QAAI,CAACE,aAAL,EAAoB;AAChB,aAAO,KAAP;AACH;;AACD,QAAI,CAACjC,WAAW,CAACiB,WAAjB,EAA8B;AAC1B,aAAO,KAAP;AACH;;AACD,WAAO,CAAC/F,cAAc,CAACsE,OAAf,CAAuB2C,oBAAvB,CAA4CJ,YAA5C,EAA0D/B,WAAW,CAACwB,SAAtE,CAAR;AACH,GAVD;;AAWAzB,EAAAA,OAAO,CAACqC,oCAAR,GAA+C,UAASC,IAAT,EAAeC,MAAf,EAAuB;AAClE,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ,UAAIC,OAAO,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAd;AACA,UAAII,mBAAmB,GAAG,IAAID,IAAJ,CAASD,OAAT,CAA1B;AACAE,MAAAA,mBAAmB,CAACC,QAApB,CAA6BD,mBAAmB,CAACE,QAApB,KAAiC,CAA9D;AACA,UAAIC,aAAa,GAAG,KAAKC,kBAAL,CAAwBC,UAAxB,CAAmCP,OAAnC,EAA4CQ,MAAhE;AACA,UAAIC,yBAAyB,GAAG,KAAKH,kBAAL,CAAwBC,UAAxB,CAAmCL,mBAAnC,EAAwDM,MAAxF;;AACA,UAAIH,aAAa,KAAKI,yBAAtB,EAAiD;AAC7C,eAAO,CAAP;AACH;AACJ;;AACD,WAAOV,MAAP;AACH,GAZD;;AAaAvC,EAAAA,OAAO,CAACW,mCAAR,GAA8C,UAASH,eAAT,EAA0BP,WAA1B,EAAuC;AACjF,QAAIiD,KAAK,GAAG,IAAZ;;AACA,QAAIC,cAAc,GAAGlD,WAAW,CAACwB,SAAjC;AACA,QAAI2B,YAAY,GAAG5C,eAAe,CAACA,eAAe,CAAC3C,MAAhB,GAAyB,CAA1B,CAAf,CAA4C6D,OAA/D;AACA,QAAI2B,oBAAoB,GAAG,KAAKP,kBAAL,CAAwBC,UAAxB,CAAmCI,cAAnC,EAAmDH,MAA9E;AACA,QAAIM,kBAAkB,GAAG,KAAKR,kBAAL,CAAwBC,UAAxB,CAAmCK,YAAnC,EAAiDJ,MAA1E;AACA,QAAIO,qBAAqB,GAAGF,oBAAoB,KAAKC,kBAArD;;AACA,QAAIC,qBAAJ,EAA2B;AACvB,aAAO/C,eAAe,CAACmB,GAAhB,CAAoB,UAAS6B,CAAT,EAAY;AACnC,YAAIC,mBAAmB,GAAGP,KAAK,CAACJ,kBAAN,CAAyBC,UAAzB,CAAoC9C,WAAW,CAACwB,SAAhD,EAA2DuB,MAA3D,GAAoEE,KAAK,CAACJ,kBAAN,CAAyBC,UAAzB,CAAoCS,CAAC,CAAC/B,SAAtC,EAAiDuB,MAA/I;;AACA,YAAIU,iBAAiB,GAAGR,KAAK,CAACJ,kBAAN,CAAyBC,UAAzB,CAAoC9C,WAAW,CAACyB,OAAhD,EAAyDsB,MAAzD,GAAkEE,KAAK,CAACJ,kBAAN,CAAyBC,UAAzB,CAAoCS,CAAC,CAAC9B,OAAtC,EAA+CsB,MAAzI;;AACAS,QAAAA,mBAAmB,GAAGP,KAAK,CAACb,oCAAN,CAA2CmB,CAAC,CAAC/B,SAA7C,EAAwDgC,mBAAxD,CAAtB;AACAC,QAAAA,iBAAiB,GAAGR,KAAK,CAACb,oCAAN,CAA2CmB,CAAC,CAAC9B,OAA7C,EAAsDgC,iBAAtD,CAApB;AACA,YAAIC,YAAY,GAAG,IAAIlB,IAAJ,CAASe,CAAC,CAAC/B,SAAF,CAAYK,OAAZ,KAAwB2B,mBAAmB,GAAGjE,IAAI,CAAC,MAAD,CAA3D,CAAnB;AACA,YAAIoE,UAAU,GAAG,IAAInB,IAAJ,CAASe,CAAC,CAAC9B,OAAF,CAAUI,OAAV,KAAsB4B,iBAAiB,GAAGlE,IAAI,CAAC,MAAD,CAAvD,CAAjB;;AACA,YAAIqE,gBAAgB,GAAGX,KAAK,CAACJ,kBAAN,CAAyBgB,UAAzB,CAAoCH,YAApC,EAAkD;AACrEI,UAAAA,IAAI,EAAE;AAD+D,SAAlD,CAAvB;;AAGA,YAAIC,cAAc,GAAGd,KAAK,CAACJ,kBAAN,CAAyBgB,UAAzB,CAAoCF,UAApC,EAAgD;AACjEG,UAAAA,IAAI,EAAE;AAD2D,SAAhD,CAArB;;AAGA,YAAI9D,WAAW,CAACgE,QAAZ,GAAuBD,cAAc,CAAClC,OAAf,KAA2B+B,gBAAgB,CAAC/B,OAAjB,EAAtD,EAAkF;AAC9E8B,UAAAA,UAAU,GAAG,IAAInB,IAAJ,CAASkB,YAAY,CAAC7B,OAAb,KAAyB7B,WAAW,CAACgE,QAA9C,CAAb;AACH;;AACD,eAAO;AACHxC,UAAAA,SAAS,EAAEkC,YADR;AAEHjC,UAAAA,OAAO,EAAEkC;AAFN,SAAP;AAIH,OApBM,CAAP;AAqBH;;AACD,WAAOpD,eAAP;AACH,GA/BD;;AAgCAR,EAAAA,OAAO,CAACe,uCAAR,GAAkD,UAASH,mBAAT,EAA8BX,WAA9B,EAA2C;AACzF,QAAIiE,MAAM,GAAG,IAAb;;AACA,QAAInE,cAAc,GAAGE,WAAW,CAACkE,MAAZ,EAArB;AACA,QAAIC,MAAM,GAAG,KAAKzE,SAAL,CAAewB,sBAAf,CAAsCpB,cAAtC,CAAb;AACA,QAAIsE,SAAS,GAAG,KAAKjD,SAAL,CAAekD,YAAf,EAAhB;AACA,QAAIC,iBAAiB,GAAG,KAAK5E,SAAL,CAAe6E,gBAAf,GAAkCC,4BAAlC,EAAxB;;AACA,QAAIF,iBAAiB,CAACG,uBAAlB,CAA0CN,MAA1C,CAAJ,EAAuD;AACnD,UAAIO,kBAAkB,GAAG,EAAzB;AACA,UAAIC,WAAW,GAAG,EAAlB;AACAhE,MAAAA,mBAAmB,CAACiE,OAApB,CAA4B,UAASC,eAAT,EAA0B;AAClD,YAAIC,OAAO,GAAG,IAAItC,IAAJ,CAAS4B,SAAS,CAAC,CAAD,CAAlB,CAAd;AACA,YAAIW,aAAa,GAAGT,iBAAiB,CAACU,yBAAlB,CAA4ClF,cAA5C,EAA4D+E,eAAe,CAACpD,OAA5E,CAApB;AACAiD,QAAAA,kBAAkB,GAAG9J,KAAK,CAAC4E,OAAN,CAAcyF,kBAAd,CAAiCJ,eAAe,CAACrD,SAAjD,EAA4DuD,aAA5D,EAA2E;AAC5FG,UAAAA,YAAY,EAAEjB,MAAM,CAACvE,SAAP,CAAiByF,YAAjB,GAAgCC,mBAAhC,CAAoDjB,MAApD;AAD8E,SAA3E,CAArB;AAGA,YAAIkB,IAAI,GAAGX,kBAAkB,CAACY,MAAnB,CAA0B,UAASC,aAAT,EAAwB;AACzD,iBAAO,IAAI/C,IAAJ,CAAS+C,aAAT,IAA0BT,OAAjC;AACH,SAFU,EAERpD,GAFQ,CAEJ,UAASW,IAAT,EAAe;AAClB,iBAAO;AACHb,YAAAA,SAAS,EAAEa,IADR;AAEHZ,YAAAA,OAAO,EAAE,IAAIe,IAAJ,CAAS,IAAIA,IAAJ,CAASH,IAAT,EAAemD,eAAf,CAA+BxF,WAAW,CAACgE,QAA3C,CAAT,CAFN;AAGHE,YAAAA,MAAM,EAAEW,eAAe,CAACX;AAHrB,WAAP;AAKH,SARU,CAAX;AASAS,QAAAA,WAAW,GAAGA,WAAW,CAACc,MAAZ,CAAmBJ,IAAnB,CAAd;AACH,OAhBD;AAiBA1E,MAAAA,mBAAmB,GAAGgE,WAAtB;AACH;;AACD,WAAOhE,mBAAP;AACH,GA7BD;;AA8BAZ,EAAAA,OAAO,CAACa,0BAAR,GAAqC,UAASL,eAAT,EAA0BP,WAA1B,EAAuC;AACxE,QAAI0F,MAAM,GAAG,IAAb;;AACA,WAAOnF,eAAe,CAACmB,GAAhB,CAAoB,UAASwC,MAAT,EAAiB;AACxC,UAAIyB,gBAAgB,GAAG3F,WAAW,CAACwB,SAAZ,CAAsBoE,iBAAtB,KAA4C1B,MAAM,CAAC1C,SAAP,CAAiBoE,iBAAjB,EAAnE;;AACA,UAAI,MAAMD,gBAAN,IAA0BD,MAAM,CAACjF,iCAAP,CAAyCT,WAAzC,CAA9B,EAAqF;AACjFkE,QAAAA,MAAM,CAAC1C,SAAP,GAAmB,IAAIgB,IAAJ,CAAS0B,MAAM,CAAC1C,SAAP,CAAiBK,OAAjB,KAA6B8D,gBAAgB,GAAGpG,IAAI,CAAC,QAAD,CAA7D,CAAnB;AACA2E,QAAAA,MAAM,CAACzC,OAAP,GAAiB,IAAIe,IAAJ,CAAS0B,MAAM,CAACzC,OAAP,CAAeI,OAAf,KAA2B8D,gBAAgB,GAAGpG,IAAI,CAAC,QAAD,CAA3D,CAAjB;AACH;;AACD,UAAIiC,SAAS,GAAGkE,MAAM,CAAC7C,kBAAP,CAA0BgB,UAA1B,CAAqCK,MAAM,CAAC1C,SAA5C,EAAuD;AACnEsC,QAAAA,IAAI,EAAE;AAD6D,OAAvD,CAAhB;;AAGA,UAAIrC,OAAO,GAAGiE,MAAM,CAAC7C,kBAAP,CAA0BgB,UAA1B,CAAqCK,MAAM,CAACzC,OAA5C,EAAqD;AAC/DqC,QAAAA,IAAI,EAAE;AADyD,OAArD,CAAd;;AAGA,aAAO;AACHtC,QAAAA,SAAS,EAAEA,SADR;AAEHC,QAAAA,OAAO,EAAEA,OAFN;AAGHyC,QAAAA,MAAM,EAAEA;AAHL,OAAP;AAKH,KAjBM,CAAP;AAkBH,GApBD;;AAqBAnE,EAAAA,OAAO,CAAC8F,6BAAR,GAAwC,UAAS/F,cAAT,EAAyB;AAC7D,QAAIsE,SAAS,GAAG,KAAKjD,SAAL,CAAekD,YAAf,EAAhB;AACA,QAAIyB,aAAa,GAAG,KAAKpG,SAAL,CAAewB,sBAAf,CAAsCpB,cAAtC,IAAwDlF,KAAK,CAAC4E,OAAN,CAAcuG,QAAd,CAAuB3B,SAAS,CAAC,CAAD,CAAhC,CAAxD,GAA+FA,SAAS,CAAC,CAAD,CAA5H;AACA,QAAI4B,cAAc,GAAG,KAAKtG,SAAL,CAAesC,MAAf,CAAsB,UAAtB,CAArB;AACA,QAAIiE,iBAAiB,GAAGD,cAAc,GAAG,KAAKnD,kBAAL,CAAwBgB,UAAxB,CAAmCiC,aAAnC,EAAkD;AACvFhC,MAAAA,IAAI,EAAE;AADiF,KAAlD,CAAH,GAEjCgC,aAFL;AAGA,QAAII,iBAAiB,GAAGF,cAAc,GAAG,KAAKnD,kBAAL,CAAwBgB,UAAxB,CAAmCO,SAAS,CAAC,CAAD,CAA5C,EAAiD;AACtFN,MAAAA,IAAI,EAAE;AADgF,KAAjD,CAAH,GAEjCM,SAAS,CAAC,CAAD,CAFd;AAGA,WAAO,CAAC6B,iBAAD,EAAoBC,iBAApB,CAAP;AACH,GAXD;;AAYAnG,EAAAA,OAAO,CAACoG,wBAAR,GAAmC,UAASnG,WAAT,EAAsBoG,UAAtB,EAAkC;AACjE,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAIC,qBAAqB,GAAG,KAAKT,6BAAL,CAAmC7F,WAAW,CAACkE,MAAZ,EAAnC,EAAyDkC,UAAzD,CAA5B;AAAA,QACIG,sBAAsB,GAAGxJ,cAAc,CAACuJ,qBAAD,EAAwB,CAAxB,CAD3C;AAAA,QAEIL,iBAAiB,GAAGM,sBAAsB,CAAC,CAAD,CAF9C;AAAA,QAGIL,iBAAiB,GAAGK,sBAAsB,CAAC,CAAD,CAH9C;;AAIA,WAAO;AACHC,MAAAA,IAAI,EAAExG,WAAW,CAACyG,cADf;AAEHC,MAAAA,SAAS,EAAE1G,WAAW,CAAC2G,mBAFpB;AAGHC,MAAAA,GAAG,EAAEX,iBAHF;AAIHY,MAAAA,GAAG,EAAEX,iBAJF;AAKHY,MAAAA,cAAc,EAAE,KAAKpH,SAAL,CAAeqH,iBAAf,EALb;AAMHC,MAAAA,KAAK,EAAEhH,WAAW,CAACwB,SANhB;AAOHyF,MAAAA,GAAG,EAAEjH,WAAW,CAACyB,OAPd;AAQHyF,MAAAA,yBAAyB,EAAE,UAAS7E,IAAT,EAAe;AACtC,YAAIN,YAAY,GAAGsE,MAAM,CAAC3G,SAAP,CAAiBsC,MAAjB,CAAwB,UAAxB,CAAnB;;AACA,YAAI,CAAC,GAAGjH,KAAK,CAACmH,aAAV,EAAyBH,YAAzB,KAA0C7G,cAAc,CAACsE,OAAf,CAAuB2C,oBAAvB,CAA4CJ,YAA5C,EAA0DM,IAA1D,CAA9C,EAA+G;AAC3G,iBAAOA,IAAP;AACH;;AACD,YAAI8E,iBAAiB,GAAGd,MAAM,CAACxD,kBAAP,CAA0BC,UAA1B,CAAqC9C,WAAW,CAACwB,SAAjD,EAA4DuB,MAApF;;AACA,YAAIqE,0BAA0B,GAAGf,MAAM,CAACxD,kBAAP,CAA0BC,UAA1B,CAAqCT,IAArC,EAA2CU,MAA5E;;AACA,YAAIsE,IAAI,GAAGF,iBAAiB,GAAGC,0BAA/B;AACAC,QAAAA,IAAI,GAAGhB,MAAM,CAACjE,oCAAP,CAA4CC,IAA5C,EAAkDgF,IAAlD,CAAP;AACA,eAAO,IAAI7E,IAAJ,CAASH,IAAI,CAACR,OAAL,KAAiBwF,IAAI,GAAGzM,KAAK,CAAC4E,OAAN,CAAcC,kBAAd,CAAiC,MAAjC,CAAjC,CAAP;AACH;AAlBE,KAAP;AAoBH,GA1BD;;AA2BAM,EAAAA,OAAO,CAACwB,6BAAR,GAAwC,UAASvB,WAAT,EAAsBqB,SAAtB,EAAiC;AACrE,QAAI2C,QAAQ,GAAGhE,WAAW,CAACgE,QAA3B;;AACA,QAAIhC,MAAM,GAAG,KAAKmE,wBAAL,CAA8BnG,WAA9B,CAAb;;AACA,QAAIsH,mBAAmB,GAAG,CAAC,GAAGrM,WAAW,CAACsM,sBAAhB,IAA0CC,aAA1C,CAAwDxF,MAAxD,CAA1B;AACA,WAAOsF,mBAAmB,CAAC5F,GAApB,CAAwB,UAASW,IAAT,EAAe;AAC1C,UAAIoF,OAAO,GAAGvM,cAAc,CAACsE,OAAf,CAAuBkI,4BAAvB,CAAoDrF,IAApD,CAAd;;AACAoF,MAAAA,OAAO,CAAC3F,OAAR,CAAgB2F,OAAO,CAAC5F,OAAR,KAAoBmC,QAApC;;AACA,UAAIvC,OAAO,GAAGvG,cAAc,CAACsE,OAAf,CAAuBmI,gCAAvB,CAAwDF,OAAxD,CAAd;;AACA,aAAO;AACHjG,QAAAA,SAAS,EAAE,IAAIgB,IAAJ,CAASH,IAAT,CADR;AAEHZ,QAAAA,OAAO,EAAEA;AAFN,OAAP;AAIH,KARM,CAAP;AASH,GAbD;;AAcA1B,EAAAA,OAAO,CAAC6H,gBAAR,GAA2B,UAASvG,SAAT,EAAoB;AAC3C,QAAIF,SAAS,GAAG,KAAKzB,SAAL,CAAemI,UAA/B;AACA,WAAO1G,SAAS,CAAC2G,gBAAV,CAA2BzG,SAA3B,CAAP;AACH,GAHD;;AAIAtB,EAAAA,OAAO,CAACc,+BAAR,GAA0C,UAASS,YAAT,EAAuBxB,cAAvB,EAAuCO,QAAvC,EAAiD;AACvF,QAAI0H,MAAM,GAAG,IAAb;;AACA,WAAOzG,YAAY,CAACI,GAAb,CAAiB,UAAS1B,WAAT,EAAsB;AAC1C,UAAIwB,SAAS,GAAG,IAAIgB,IAAJ,CAASxC,WAAW,CAACwB,SAArB,CAAhB;;AACA,UAAIwG,aAAa,GAAGD,MAAM,CAACE,4BAAP,CAAoCjI,WAApC,EAAiDF,cAAjD,CAApB;;AACA,UAAIoI,YAAY,GAAGH,MAAM,CAACI,oBAAP,CAA4BH,aAA5B,CAAnB;;AACAhI,MAAAA,WAAW,CAACwB,SAAZ,GAAwBuG,MAAM,CAACK,yBAAP,CAAiC;AACrDpI,QAAAA,WAAW,EAAEA,WADwC;AAErDF,QAAAA,cAAc,EAAEA,cAFqC;AAGrD0B,QAAAA,SAAS,EAAEA,SAH0C;AAIrD0G,QAAAA,YAAY,EAAEA,YAJuC;AAKrDF,QAAAA,aAAa,EAAEA;AALsC,OAAjC,CAAxB;AAOA,aAAOhI,WAAP;AACH,KAZM,CAAP;AAaH,GAfD;;AAgBAD,EAAAA,OAAO,CAACkI,4BAAR,GAAuC,YAAW;AAC9C,WAAO,KAAKvI,SAAL,CAAe2I,gBAAf,EAAP;AACH,GAFD;;AAGAtI,EAAAA,OAAO,CAACoI,oBAAR,GAA+B,YAAW;AACtC,WAAO,KAAKzI,SAAL,CAAe4I,qBAAf,CAAqC,cAArC,CAAP;AACH,GAFD;;AAGAvI,EAAAA,OAAO,CAACqI,yBAAR,GAAoC,UAASG,OAAT,EAAkB;AAClD,QAAIvI,WAAW,GAAGuI,OAAO,CAACvI,WAA1B;AAAA,QACIF,cAAc,GAAGyI,OAAO,CAACzI,cAD7B;AAAA,QAEIoI,YAAY,GAAGK,OAAO,CAACL,YAF3B;AAAA,QAGIF,aAAa,GAAGO,OAAO,CAACP,aAH5B;AAIA,QAAIxG,SAAS,GAAG+G,OAAO,CAAC/G,SAAxB;AACA,QAAIgH,UAAU,GAAG,IAAIhG,IAAJ,CAASxC,WAAW,CAACwB,SAArB,CAAjB;;AACA,QAAI,KAAK9B,SAAL,CAAewB,sBAAf,CAAsCpB,cAAtC,CAAJ,EAA2D;AACvD0I,MAAAA,UAAU,GAAG5N,KAAK,CAAC4E,OAAN,CAAciJ,aAAd,CAA4BjH,SAA5B,EAAuCwG,aAAvC,CAAb;AACH,KAFD,MAEO;AACH,UAAIxG,SAAS,GAAGwG,aAAhB,EAA+B;AAC3BxG,QAAAA,SAAS,GAAGwG,aAAZ;AACH;;AACDQ,MAAAA,UAAU,GAAG5N,KAAK,CAAC4E,OAAN,CAAciJ,aAAd,CAA4BzI,WAAW,CAACwB,SAAxC,EAAmDA,SAAnD,CAAb;AACH;;AACD,WAAO5G,KAAK,CAAC4E,OAAN,CAAckJ,uBAAd,CAAsCF,UAAtC,EAAkDN,YAAlD,CAAP;AACH,GAhBD;;AAiBAnI,EAAAA,OAAO,CAACiB,uBAAR,GAAkC,UAAS2H,gBAAT,EAA2BtH,SAA3B,EAAsC8C,MAAtC,EAA8CyE,SAA9C,EAAyD;AACvF,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAIC,KAAK,GAAG,UAAS/L,CAAT,EAAY;AACpB,UAAIgM,WAAW,GAAGH,MAAM,CAACnJ,SAAP,CAAiBmI,UAAjB,CAA4BoB,2BAA5B,CAAwDN,gBAAgB,CAAC3L,CAAD,CAAhB,CAAoBwE,SAA5E,EAAuFH,SAAvF,EAAkG8C,MAAlG,CAAlB;;AACA6E,MAAAA,WAAW,CAACpE,OAAZ,CAAoB,UAASsE,UAAT,EAAqB;AACrC,SAAC,GAAGlO,OAAO,CAACmO,MAAZ,EAAoBD,UAApB,EAAgC;AAC5BE,UAAAA,IAAI,EAAE;AACFpJ,YAAAA,WAAW,EAAE2I,gBAAgB,CAAC3L,CAAD,CAD3B;AAEFqM,YAAAA,iBAAiB,EAAEV,gBAAgB,CAAC3L,CAAD,CAAhB,CAAoBkH;AAFrC;AADsB,SAAhC;AAMH,OAPD;AAQA4E,MAAAA,MAAM,GAAGA,MAAM,CAACrD,MAAP,CAAcuD,WAAd,CAAT;AACH,KAXD;;AAYA,SAAK,IAAIhM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2L,gBAAgB,CAAC/K,MAArC,EAA6CZ,CAAC,EAA9C,EAAkD;AAC9C+L,MAAAA,KAAK,CAAC/L,CAAD,CAAL;AACH;;AACD,WAAO8L,MAAP;AACH,GAnBD;;AAoBA3J,EAAAA,YAAY,CAACzE,wCAAD,EAA2C,CAAC;AACpDwE,IAAAA,GAAG,EAAE,oBAD+C;AAEpDoK,IAAAA,GAAG,EAAE,YAAW;AACZ,aAAO,KAAK5J,SAAL,CAAemD,kBAAtB;AACH;AAJmD,GAAD,EAKpD;AACC3D,IAAAA,GAAG,EAAE,WADN;AAECoK,IAAAA,GAAG,EAAE,YAAW;AACZ,aAAO,KAAK5J,SAAL,CAAeyF,YAAf,EAAP;AACH;AAJF,GALoD,EAUpD;AACCjG,IAAAA,GAAG,EAAE,kBADN;AAECoK,IAAAA,GAAG,EAAE,YAAW;AACZ,aAAO,KAAKnI,SAAL,CAAeoI,gBAAtB;AACH;AAJF,GAVoD,CAA3C,CAAZ;;AAgBA,SAAO7O,wCAAP;AACH,CA1R8C,EAA/C;;AA2RAF,OAAO,CAACE,wCAAR,GAAmDA,wCAAnD;;AACA,IAAID,2CAA2C,GAAG,UAAS+O,qBAAT,EAAgC;AAC9EpN,EAAAA,cAAc,CAAC3B,2CAAD,EAA8C+O,qBAA9C,CAAd;;AAEA,WAAS/O,2CAAT,GAAuD;AACnD,WAAO+O,qBAAqB,CAACC,KAAtB,CAA4B,IAA5B,EAAkCC,SAAlC,KAAgD,IAAvD;AACH;;AACD,MAAIC,OAAO,GAAGlP,2CAA2C,CAAC8B,SAA1D;;AACAoN,EAAAA,OAAO,CAAC3I,uBAAR,GAAkC,UAAS2H,gBAAT,EAA2BtH,SAA3B,EAAsC8C,MAAtC,EAA8CyE,SAA9C,EAAyD;AACvF,QAAIgB,MAAM,GAAG,IAAb;;AACA,QAAItI,YAAY,GAAG6C,MAAM,GAAGwE,gBAAH,GAAsBA,gBAAgB,CAACrD,MAAjB,CAAwB,UAAS3D,IAAT,EAAe;AAClF,UAAIuC,MAAM,GAAGvC,IAAI,CAACuC,MAAlB;AAAA,UACI1C,SAAS,GAAGG,IAAI,CAACH,SADrB;AAAA,UAEIC,OAAO,GAAGE,IAAI,CAACF,OAFnB;AAGA,UAAI2E,UAAU,GAAGlC,MAAM,CAACkC,UAAxB;AACA,aAAOwD,MAAM,CAACL,gBAAP,CAAwBM,4BAAxB,CAAqDzD,UAArD,EAAiE5E,SAAjE,EAA4EC,OAA5E,CAAP;AACH,KAN8C,CAA/C;;AAOA,QAAImH,SAAS,IAAI,KAAKkB,kBAAtB,EAA0C;AACtC,aAAO,KAAKC,gCAAL,CAAsCzI,YAAtC,EAAoDD,SAApD,EAA+D8C,MAA/D,CAAP;AACH;;AACD,WAAOqF,qBAAqB,CAACjN,SAAtB,CAAgCyE,uBAAhC,CAAwDzD,IAAxD,CAA6D,IAA7D,EAAmE+D,YAAnE,EAAiFD,SAAjF,EAA4F8C,MAA5F,EAAoGyE,SAApG,CAAP;AACH,GAbD;;AAcAe,EAAAA,OAAO,CAACI,gCAAR,GAA2C,UAASpB,gBAAT,EAA2BtH,SAA3B,EAAsC8C,MAAtC,EAA8C;AACrF,QAAI6F,MAAM,GAAG,IAAb;;AACA,QAAIlB,MAAM,GAAG,EAAb;AACAH,IAAAA,gBAAgB,CAAC/D,OAAjB,CAAyB,UAAS5E,WAAT,EAAsB;AAC3C,UAAIkE,MAAM,GAAGlE,WAAW,CAACkE,MAAzB;AACA,UAAIkC,UAAU,GAAGlC,MAAM,CAACkC,UAAxB;;AACA,UAAI8C,UAAU,GAAGc,MAAM,CAAC7I,SAAP,CAAiB8I,oBAAjB,CAAsCjK,WAAW,CAACwB,SAAlD,EAA6D4E,UAA7D,EAAyEjC,MAAzE,CAAjB;;AACA,UAAI+E,UAAJ,EAAgB;AACZ,SAAC,GAAGlO,OAAO,CAACmO,MAAZ,EAAoBD,UAApB,EAAgC;AAC5BE,UAAAA,IAAI,EAAE;AACFpJ,YAAAA,WAAW,EAAEA,WADX;AAEFqJ,YAAAA,iBAAiB,EAAEnF;AAFjB;AADsB,SAAhC;AAMA4E,QAAAA,MAAM,CAACxK,IAAP,CAAY4K,UAAZ;AACH;AACJ,KAbD;AAcA,WAAOJ,MAAP;AACH,GAlBD;;AAmBAa,EAAAA,OAAO,CAAC9I,+BAAR,GAA0C,UAASS,YAAT,EAAuBxB,cAAvB,EAAuCO,QAAvC,EAAiD;AACvF,QAAI6J,MAAM,GAAG,IAAb;;AACA,WAAO5I,YAAY,CAACgE,MAAb,CAAoB,UAAStF,WAAT,EAAsB;AAC7C,UAAIgI,aAAa,GAAGkC,MAAM,CAACjC,4BAAP,CAAoCjI,WAApC,EAAiDF,cAAjD,CAApB;;AACA,UAAI,CAACkI,aAAL,EAAoB;AAChB,eAAO,KAAP;AACH;;AACD,UAAIE,YAAY,GAAGgC,MAAM,CAAC/B,oBAAP,CAA4BH,aAA5B,CAAnB;;AACA,UAAIxG,SAAS,GAAG,IAAIgB,IAAJ,CAASxC,WAAW,CAACwB,SAArB,CAAhB;AACAxB,MAAAA,WAAW,CAACwB,SAAZ,GAAwB0I,MAAM,CAAC9B,yBAAP,CAAiC;AACrDpI,QAAAA,WAAW,EAAEA,WADwC;AAErDF,QAAAA,cAAc,EAAEA,cAFqC;AAGrD0B,QAAAA,SAAS,EAAEA,SAH0C;AAIrD0G,QAAAA,YAAY,EAAEA,YAJuC;AAKrDF,QAAAA,aAAa,EAAEA;AALsC,OAAjC,CAAxB;AAOA,aAAO,CAAC3H,QAAD,GAAYL,WAAW,CAACyB,OAAZ,GAAsBzB,WAAW,CAACwB,SAA9C,GAA0D,IAAjE;AACH,KAfM,CAAP;AAgBH,GAlBD;;AAmBAmI,EAAAA,OAAO,CAACpI,6BAAR,GAAwC,UAASvB,WAAT,EAAsBqB,SAAtB,EAAiC;AACrE,QAAI8I,OAAO,GAAG,IAAd;;AACA,QAAInG,QAAQ,GAAGhE,WAAW,CAACgE,QAA3B;AACA,QAAI8E,MAAM,GAAG,EAAb;AACA,QAAIsB,YAAY,GAAG,KAAKN,kBAAL,IAA2B,KAAK3I,SAAL,CAAekJ,cAAf,EAA3B,GAA6D,KAAKzC,gBAAL,CAAsBvG,SAAtB,CAA7D,GAAgG,CAAC,CAAD,CAAnH;AACA+I,IAAAA,YAAY,CAACxF,OAAb,CAAqB,UAASwB,UAAT,EAAqB;AACtC,UAAIpE,MAAM,GAAGmI,OAAO,CAAChE,wBAAR,CAAiCnG,WAAjC,EAA8CoG,UAA9C,CAAb;;AACA,UAAIkB,mBAAmB,GAAG,CAAC,GAAGrM,WAAW,CAACsM,sBAAhB,IAA0CC,aAA1C,CAAwDxF,MAAxD,CAA1B;AACA,UAAIsI,aAAa,GAAGhD,mBAAmB,CAAC5F,GAApB,CAAwB,UAASW,IAAT,EAAe;AACvD,YAAIb,SAAS,GAAG,IAAIgB,IAAJ,CAASH,IAAT,CAAhB;;AACA,YAAIoF,OAAO,GAAGvM,cAAc,CAACsE,OAAf,CAAuBkI,4BAAvB,CAAoDrF,IAApD,CAAd;;AACAoF,QAAAA,OAAO,CAAC3F,OAAR,CAAgB2F,OAAO,CAAC5F,OAAR,KAAoBmC,QAApC;;AACA,YAAIvC,OAAO,GAAGvG,cAAc,CAACsE,OAAf,CAAuBmI,gCAAvB,CAAwDF,OAAxD,CAAd;;AACA,eAAO;AACHjG,UAAAA,SAAS,EAAEA,SADR;AAEHC,UAAAA,OAAO,EAAEA,OAFN;AAGH2E,UAAAA,UAAU,EAAEA;AAHT,SAAP;AAKH,OAVmB,CAApB;AAWA0C,MAAAA,MAAM,CAACxK,IAAP,CAAYmL,KAAZ,CAAkBX,MAAlB,EAA0BzN,kBAAkB,CAACiP,aAAD,CAA5C;AACH,KAfD;AAgBA,WAAOxB,MAAP;AACH,GAtBD;;AAuBAa,EAAAA,OAAO,CAACxB,oBAAR,GAA+B,UAASH,aAAT,EAAwB;AACnD,WAAOA,aAAa,CAACrF,QAAd,EAAP;AACH,GAFD;;AAGAgH,EAAAA,OAAO,CAAC1B,4BAAR,GAAuC,UAASjI,WAAT,EAAsBF,cAAtB,EAAsC;AACzE,QAAIyK,qBAAqB,GAAG,KAAK7K,SAAL,CAAeyF,YAAf,EAA5B;AAAA,QACIoE,gBAAgB,GAAGgB,qBAAqB,CAAChB,gBAD7C;;AAEA,QAAInD,UAAU,GAAGpG,WAAW,CAACkE,MAAZ,CAAmBkC,UAApC;AACA,QAAI5E,SAAS,GAAGxB,WAAW,CAACwB,SAA5B;AAAA,QACIC,OAAO,GAAGzB,WAAW,CAACyB,OAD1B;;AAEA,QAAIpB,QAAQ,GAAG,KAAKC,oBAAL,CAA0BR,cAA1B,CAAf;;AACA,WAAOyJ,gBAAgB,CAACiB,sBAAjB,CAAwCpE,UAAxC,EAAoD5E,SAApD,EAA+DC,OAA/D,EAAwEpB,QAAxE,CAAP;AACH,GARD;;AASAsJ,EAAAA,OAAO,CAACc,mBAAR,GAA8B,UAASnJ,YAAT,EAAuBpB,aAAvB,EAAsC;AAChE,QAAIwK,OAAO,GAAG,IAAd;;AACA,QAAIN,YAAY,GAAG,KAAKN,kBAAL,GAA0B,KAAKlC,gBAAL,CAAsB1H,aAAtB,CAA1B,GAAiE,CAAC,CAAD,CAApF;AACA,QAAI4I,MAAM,GAAG,EAAb;AACAsB,IAAAA,YAAY,CAACxF,OAAb,CAAqB,UAASwB,UAAT,EAAqB;AACtC,UAAIuE,cAAc,GAAGD,OAAO,CAACnB,gBAAR,CAAyBqB,iBAAzB,CAA2CxE,UAA3C,CAArB;;AACA,UAAIuE,cAAJ,EAAoB;AAChBrJ,QAAAA,YAAY,CAACsD,OAAb,CAAqB,UAAS5E,WAAT,EAAsB;AACvC,cAAI6K,eAAe,GAAG,CAAC,GAAG7P,OAAO,CAACmO,MAAZ,EAAoB,EAApB,EAAwBnJ,WAAxB,CAAtB;AACA6K,UAAAA,eAAe,CAACzE,UAAhB,GAA6BA,UAA7B;AACA0C,UAAAA,MAAM,CAACxK,IAAP,CAAYuM,eAAZ;AACH,SAJD;AAKH;AACJ,KATD;AAUA,WAAO/B,MAAP;AACH,GAfD;;AAgBAa,EAAAA,OAAO,CAAC/B,gBAAR,GAA2B,UAASvG,SAAT,EAAoB;AAC3C,QAAI+I,YAAY,GAAGZ,qBAAqB,CAACjN,SAAtB,CAAgCqL,gBAAhC,CAAiDrK,IAAjD,CAAsD,IAAtD,EAA4D8D,SAA5D,CAAnB;;AACA,QAAIyJ,sBAAsB,GAAG,KAAKpL,SAAL,CAAeyF,YAAf,EAA7B;AAAA,QACIoE,gBAAgB,GAAGuB,sBAAsB,CAACvB,gBAD9C;;AAEA,QAAIwB,oBAAoB,GAAGxB,gBAAgB,CAACyB,eAAjB,EAA3B;AACA,QAAIlC,MAAM,GAAGsB,YAAY,CAAC9E,MAAb,CAAoB,UAASc,UAAT,EAAqB;AAClD,aAAO2E,oBAAoB,CAACE,OAArB,CAA6B7E,UAA7B,MAA6C,CAAC,CAArD;AACH,KAFY,CAAb;AAGA,WAAO0C,MAAP;AACH,GATD;;AAUAa,EAAAA,OAAO,CAACnJ,mBAAR,GAA8B,UAASR,WAAT,EAAsBqB,SAAtB,EAAiC;AAC3D,QAAIC,YAAY,GAAGkI,qBAAqB,CAACjN,SAAtB,CAAgCiE,mBAAhC,CAAoDjD,IAApD,CAAyD,IAAzD,EAA+DyC,WAA/D,EAA4EqB,SAA5E,CAAnB;;AACA,WAAO,CAACrB,WAAW,CAACiB,WAAb,GAA2B,KAAKwJ,mBAAL,CAAyBnJ,YAAzB,EAAuCD,SAAvC,CAA3B,GAA+EC,YAAtF;AACH,GAHD;;AAIAnC,EAAAA,YAAY,CAAC1E,2CAAD,EAA8C,CAAC;AACvDyE,IAAAA,GAAG,EAAE,kBADkD;AAEvDoK,IAAAA,GAAG,EAAE,YAAW;AACZ,aAAO,KAAKnI,SAAL,CAAeoI,gBAAtB;AACH;AAJsD,GAAD,EAKvD;AACCrK,IAAAA,GAAG,EAAE,oBADN;AAECoK,IAAAA,GAAG,EAAE,YAAW;AACZ,aAAO,KAAKnI,SAAL,CAAe+J,2BAAf,EAAP;AACH;AAJF,GALuD,CAA9C,CAAZ;;AAWA,SAAOzQ,2CAAP;AACH,CAxIiD,CAwIhDC,wCAxIgD,CAAlD;;AAyIAF,OAAO,CAACC,2CAAR,GAAsDA,2CAAtD","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/appointmentSettingsGenerator.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.AppointmentSettingsGeneratorVirtualStrategy = exports.AppointmentSettingsGeneratorBaseStrategy = exports.AppointmentSettingsGenerator = void 0;\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _recurrence = require(\"./recurrence\");\r\nvar _utilsTimeZone = _interopRequireDefault(require(\"./utils.timeZone.js\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\n\r\nfunction _slicedToArray(arr, i) {\r\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest()\r\n}\r\n\r\nfunction _nonIterableRest() {\r\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _iterableToArrayLimit(arr, i) {\r\n    if (\"undefined\" === typeof Symbol || !(Symbol.iterator in Object(arr))) {\r\n        return\r\n    }\r\n    var _arr = [];\r\n    var _n = true;\r\n    var _d = false;\r\n    var _e = void 0;\r\n    try {\r\n        for (var _s, _i = arr[Symbol.iterator](); !(_n = (_s = _i.next()).done); _n = true) {\r\n            _arr.push(_s.value);\r\n            if (i && _arr.length === i) {\r\n                break\r\n            }\r\n        }\r\n    } catch (err) {\r\n        _d = true;\r\n        _e = err\r\n    } finally {\r\n        try {\r\n            if (!_n && null != _i.return) {\r\n                _i.return()\r\n            }\r\n        } finally {\r\n            if (_d) {\r\n                throw _e\r\n            }\r\n        }\r\n    }\r\n    return _arr\r\n}\r\n\r\nfunction _arrayWithHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return arr\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar AppointmentSettingsGenerator = function() {\r\n    function AppointmentSettingsGenerator(scheduler) {\r\n        this.scheduler = scheduler;\r\n        this.settingsStrategy = this.scheduler.isVirtualScrolling() ? new AppointmentSettingsGeneratorVirtualStrategy(this.scheduler) : new AppointmentSettingsGeneratorBaseStrategy(this.scheduler)\r\n    }\r\n    var _proto = AppointmentSettingsGenerator.prototype;\r\n    _proto.create = function(rawAppointment) {\r\n        return this.settingsStrategy.create(rawAppointment)\r\n    };\r\n    return AppointmentSettingsGenerator\r\n}();\r\nexports.AppointmentSettingsGenerator = AppointmentSettingsGenerator;\r\nvar AppointmentSettingsGeneratorBaseStrategy = function() {\r\n    function AppointmentSettingsGeneratorBaseStrategy(scheduler) {\r\n        this.scheduler = scheduler\r\n    }\r\n    var _proto2 = AppointmentSettingsGeneratorBaseStrategy.prototype;\r\n    _proto2.create = function(rawAppointment) {\r\n        var scheduler = this.scheduler;\r\n        var appointment = scheduler.createAppointmentAdapter(rawAppointment);\r\n        var itemResources = scheduler._resourcesManager.getResourcesFromItem(rawAppointment);\r\n        var isAllDay = this._isAllDayAppointment(rawAppointment);\r\n        var appointmentList = this._createAppointments(appointment, itemResources);\r\n        if (this._canProcessNotNativeTimezoneDates(appointment)) {\r\n            appointmentList = this._getProcessedNotNativeTimezoneDates(appointmentList, appointment)\r\n        }\r\n        var gridAppointmentList = this._createGridAppointmentList(appointmentList, appointment);\r\n        gridAppointmentList = this._cropAppointmentsByStartDayHour(gridAppointmentList, rawAppointment, isAllDay);\r\n        gridAppointmentList = this._getProcessedLongAppointmentsIfRequired(gridAppointmentList, appointment);\r\n        var appointmentInfos = this._createAppointmentInfos(gridAppointmentList, itemResources, isAllDay, appointment.isRecurrent);\r\n        return appointmentInfos\r\n    };\r\n    _proto2._isAllDayAppointment = function(rawAppointment) {\r\n        return this.scheduler.appointmentTakesAllDay(rawAppointment) && this.workspace.supportAllDayRow()\r\n    };\r\n    _proto2._createAppointments = function(appointment, resources) {\r\n        var appointments = this._createRecurrenceAppointments(appointment, resources);\r\n        if (!appointment.isRecurrent && 0 === appointments.length) {\r\n            appointments.push({\r\n                startDate: appointment.startDate,\r\n                endDate: appointment.endDate\r\n            })\r\n        }\r\n        appointments = appointments.map(function(item) {\r\n            var startDate = item.startDate,\r\n                endDate = item.endDate;\r\n            var endTime = null === endDate || void 0 === endDate ? void 0 : endDate.getTime();\r\n            if (startDate.getTime() === endTime) {\r\n                endDate.setTime(endTime + toMs(\"minute\"))\r\n            }\r\n            return item\r\n        });\r\n        return appointments\r\n    };\r\n    _proto2._canProcessNotNativeTimezoneDates = function(appointment) {\r\n        var timeZoneName = this.scheduler.option(\"timeZone\");\r\n        var isTimeZoneSet = !(0, _type.isEmptyObject)(timeZoneName);\r\n        if (!isTimeZoneSet) {\r\n            return false\r\n        }\r\n        if (!appointment.isRecurrent) {\r\n            return false\r\n        }\r\n        return !_utilsTimeZone.default.isEqualLocalTimeZone(timeZoneName, appointment.startDate)\r\n    };\r\n    _proto2._getProcessedNotNativeDateIfCrossDST = function(date, offset) {\r\n        if (offset < 0) {\r\n            var newDate = new Date(date);\r\n            var newDateMinusOneHour = new Date(newDate);\r\n            newDateMinusOneHour.setHours(newDateMinusOneHour.getHours() - 1);\r\n            var newDateOffset = this.timeZoneCalculator.getOffsets(newDate).common;\r\n            var newDateMinusOneHourOffset = this.timeZoneCalculator.getOffsets(newDateMinusOneHour).common;\r\n            if (newDateOffset !== newDateMinusOneHourOffset) {\r\n                return 0\r\n            }\r\n        }\r\n        return offset\r\n    };\r\n    _proto2._getProcessedNotNativeTimezoneDates = function(appointmentList, appointment) {\r\n        var _this = this;\r\n        var startDateRange = appointment.startDate;\r\n        var endDateRange = appointmentList[appointmentList.length - 1].endDate;\r\n        var startDateRangeOffset = this.timeZoneCalculator.getOffsets(startDateRange).common;\r\n        var endDateRangeOffset = this.timeZoneCalculator.getOffsets(endDateRange).common;\r\n        var isChangeOffsetInRange = startDateRangeOffset !== endDateRangeOffset;\r\n        if (isChangeOffsetInRange) {\r\n            return appointmentList.map(function(a) {\r\n                var diffStartDateOffset = _this.timeZoneCalculator.getOffsets(appointment.startDate).common - _this.timeZoneCalculator.getOffsets(a.startDate).common;\r\n                var diffEndDateOffset = _this.timeZoneCalculator.getOffsets(appointment.endDate).common - _this.timeZoneCalculator.getOffsets(a.endDate).common;\r\n                diffStartDateOffset = _this._getProcessedNotNativeDateIfCrossDST(a.startDate, diffStartDateOffset);\r\n                diffEndDateOffset = _this._getProcessedNotNativeDateIfCrossDST(a.endDate, diffEndDateOffset);\r\n                var newStartDate = new Date(a.startDate.getTime() + diffStartDateOffset * toMs(\"hour\"));\r\n                var newEndDate = new Date(a.endDate.getTime() + diffEndDateOffset * toMs(\"hour\"));\r\n                var testNewStartDate = _this.timeZoneCalculator.createDate(newStartDate, {\r\n                    path: \"toGrid\"\r\n                });\r\n                var testNewEndDate = _this.timeZoneCalculator.createDate(newEndDate, {\r\n                    path: \"toGrid\"\r\n                });\r\n                if (appointment.duration > testNewEndDate.getTime() - testNewStartDate.getTime()) {\r\n                    newEndDate = new Date(newStartDate.getTime() + appointment.duration)\r\n                }\r\n                return {\r\n                    startDate: newStartDate,\r\n                    endDate: newEndDate\r\n                }\r\n            })\r\n        }\r\n        return appointmentList\r\n    };\r\n    _proto2._getProcessedLongAppointmentsIfRequired = function(gridAppointmentList, appointment) {\r\n        var _this2 = this;\r\n        var rawAppointment = appointment.source();\r\n        var allDay = this.scheduler.appointmentTakesAllDay(rawAppointment);\r\n        var dateRange = this.workspace.getDateRange();\r\n        var renderingStrategy = this.scheduler.getLayoutManager().getRenderingStrategyInstance();\r\n        if (renderingStrategy.needSeparateAppointment(allDay)) {\r\n            var longStartDateParts = [];\r\n            var resultDates = [];\r\n            gridAppointmentList.forEach(function(gridAppointment) {\r\n                var maxDate = new Date(dateRange[1]);\r\n                var endDateOfPart = renderingStrategy.normalizeEndDateByViewEnd(rawAppointment, gridAppointment.endDate);\r\n                longStartDateParts = _date.default.getDatesOfInterval(gridAppointment.startDate, endDateOfPart, {\r\n                    milliseconds: _this2.scheduler.getWorkSpace().getIntervalDuration(allDay)\r\n                });\r\n                var list = longStartDateParts.filter(function(startDatePart) {\r\n                    return new Date(startDatePart) < maxDate\r\n                }).map(function(date) {\r\n                    return {\r\n                        startDate: date,\r\n                        endDate: new Date(new Date(date).setMilliseconds(appointment.duration)),\r\n                        source: gridAppointment.source\r\n                    }\r\n                });\r\n                resultDates = resultDates.concat(list)\r\n            });\r\n            gridAppointmentList = resultDates\r\n        }\r\n        return gridAppointmentList\r\n    };\r\n    _proto2._createGridAppointmentList = function(appointmentList, appointment) {\r\n        var _this3 = this;\r\n        return appointmentList.map(function(source) {\r\n            var offsetDifference = appointment.startDate.getTimezoneOffset() - source.startDate.getTimezoneOffset();\r\n            if (0 !== offsetDifference && _this3._canProcessNotNativeTimezoneDates(appointment)) {\r\n                source.startDate = new Date(source.startDate.getTime() + offsetDifference * toMs(\"minute\"));\r\n                source.endDate = new Date(source.endDate.getTime() + offsetDifference * toMs(\"minute\"))\r\n            }\r\n            var startDate = _this3.timeZoneCalculator.createDate(source.startDate, {\r\n                path: \"toGrid\"\r\n            });\r\n            var endDate = _this3.timeZoneCalculator.createDate(source.endDate, {\r\n                path: \"toGrid\"\r\n            });\r\n            return {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                source: source\r\n            }\r\n        })\r\n    };\r\n    _proto2._createExtremeRecurrenceDates = function(rawAppointment) {\r\n        var dateRange = this.workspace.getDateRange();\r\n        var startViewDate = this.scheduler.appointmentTakesAllDay(rawAppointment) ? _date.default.trimTime(dateRange[0]) : dateRange[0];\r\n        var commonTimeZone = this.scheduler.option(\"timeZone\");\r\n        var minRecurrenceDate = commonTimeZone ? this.timeZoneCalculator.createDate(startViewDate, {\r\n            path: \"fromGrid\"\r\n        }) : startViewDate;\r\n        var maxRecurrenceDate = commonTimeZone ? this.timeZoneCalculator.createDate(dateRange[1], {\r\n            path: \"fromGrid\"\r\n        }) : dateRange[1];\r\n        return [minRecurrenceDate, maxRecurrenceDate]\r\n    };\r\n    _proto2._createRecurrenceOptions = function(appointment, groupIndex) {\r\n        var _this4 = this;\r\n        var _this$_createExtremeR = this._createExtremeRecurrenceDates(appointment.source(), groupIndex),\r\n            _this$_createExtremeR2 = _slicedToArray(_this$_createExtremeR, 2),\r\n            minRecurrenceDate = _this$_createExtremeR2[0],\r\n            maxRecurrenceDate = _this$_createExtremeR2[1];\r\n        return {\r\n            rule: appointment.recurrenceRule,\r\n            exception: appointment.recurrenceException,\r\n            min: minRecurrenceDate,\r\n            max: maxRecurrenceDate,\r\n            firstDayOfWeek: this.scheduler.getFirstDayOfWeek(),\r\n            start: appointment.startDate,\r\n            end: appointment.endDate,\r\n            getPostProcessedException: function(date) {\r\n                var timeZoneName = _this4.scheduler.option(\"timeZone\");\r\n                if ((0, _type.isEmptyObject)(timeZoneName) || _utilsTimeZone.default.isEqualLocalTimeZone(timeZoneName, date)) {\r\n                    return date\r\n                }\r\n                var appointmentOffset = _this4.timeZoneCalculator.getOffsets(appointment.startDate).common;\r\n                var exceptionAppointmentOffset = _this4.timeZoneCalculator.getOffsets(date).common;\r\n                var diff = appointmentOffset - exceptionAppointmentOffset;\r\n                diff = _this4._getProcessedNotNativeDateIfCrossDST(date, diff);\r\n                return new Date(date.getTime() - diff * _date.default.dateToMilliseconds(\"hour\"))\r\n            }\r\n        }\r\n    };\r\n    _proto2._createRecurrenceAppointments = function(appointment, resources) {\r\n        var duration = appointment.duration;\r\n        var option = this._createRecurrenceOptions(appointment);\r\n        var generatedStartDates = (0, _recurrence.getRecurrenceProcessor)().generateDates(option);\r\n        return generatedStartDates.map(function(date) {\r\n            var utcDate = _utilsTimeZone.default.createUTCDateWithLocalOffset(date);\r\n            utcDate.setTime(utcDate.getTime() + duration);\r\n            var endDate = _utilsTimeZone.default.createDateFromUTCWithLocalOffset(utcDate);\r\n            return {\r\n                startDate: new Date(date),\r\n                endDate: endDate\r\n            }\r\n        })\r\n    };\r\n    _proto2._getGroupIndices = function(resources) {\r\n        var workspace = this.scheduler._workSpace;\r\n        return workspace._getGroupIndexes(resources)\r\n    };\r\n    _proto2._cropAppointmentsByStartDayHour = function(appointments, rawAppointment, isAllDay) {\r\n        var _this5 = this;\r\n        return appointments.map(function(appointment) {\r\n            var startDate = new Date(appointment.startDate);\r\n            var firstViewDate = _this5._getAppointmentFirstViewDate(appointment, rawAppointment);\r\n            var startDayHour = _this5._getViewStartDayHour(firstViewDate);\r\n            appointment.startDate = _this5._getAppointmentResultDate({\r\n                appointment: appointment,\r\n                rawAppointment: rawAppointment,\r\n                startDate: startDate,\r\n                startDayHour: startDayHour,\r\n                firstViewDate: firstViewDate\r\n            });\r\n            return appointment\r\n        })\r\n    };\r\n    _proto2._getAppointmentFirstViewDate = function() {\r\n        return this.scheduler.getStartViewDate()\r\n    };\r\n    _proto2._getViewStartDayHour = function() {\r\n        return this.scheduler._getCurrentViewOption(\"startDayHour\")\r\n    };\r\n    _proto2._getAppointmentResultDate = function(options) {\r\n        var appointment = options.appointment,\r\n            rawAppointment = options.rawAppointment,\r\n            startDayHour = options.startDayHour,\r\n            firstViewDate = options.firstViewDate;\r\n        var startDate = options.startDate;\r\n        var resultDate = new Date(appointment.startDate);\r\n        if (this.scheduler.appointmentTakesAllDay(rawAppointment)) {\r\n            resultDate = _date.default.normalizeDate(startDate, firstViewDate)\r\n        } else {\r\n            if (startDate < firstViewDate) {\r\n                startDate = firstViewDate\r\n            }\r\n            resultDate = _date.default.normalizeDate(appointment.startDate, startDate)\r\n        }\r\n        return _date.default.roundDateByStartDayHour(resultDate, startDayHour)\r\n    };\r\n    _proto2._createAppointmentInfos = function(gridAppointments, resources, allDay, recurrent) {\r\n        var _this6 = this;\r\n        var result = [];\r\n        var _loop = function(i) {\r\n            var coordinates = _this6.scheduler._workSpace.getCoordinatesByDateInGroup(gridAppointments[i].startDate, resources, allDay);\r\n            coordinates.forEach(function(coordinate) {\r\n                (0, _extend.extend)(coordinate, {\r\n                    info: {\r\n                        appointment: gridAppointments[i],\r\n                        sourceAppointment: gridAppointments[i].source\r\n                    }\r\n                })\r\n            });\r\n            result = result.concat(coordinates)\r\n        };\r\n        for (var i = 0; i < gridAppointments.length; i++) {\r\n            _loop(i)\r\n        }\r\n        return result\r\n    };\r\n    _createClass(AppointmentSettingsGeneratorBaseStrategy, [{\r\n        key: \"timeZoneCalculator\",\r\n        get: function() {\r\n            return this.scheduler.timeZoneCalculator\r\n        }\r\n    }, {\r\n        key: \"workspace\",\r\n        get: function() {\r\n            return this.scheduler.getWorkSpace()\r\n        }\r\n    }, {\r\n        key: \"viewDataProvider\",\r\n        get: function() {\r\n            return this.workspace.viewDataProvider\r\n        }\r\n    }]);\r\n    return AppointmentSettingsGeneratorBaseStrategy\r\n}();\r\nexports.AppointmentSettingsGeneratorBaseStrategy = AppointmentSettingsGeneratorBaseStrategy;\r\nvar AppointmentSettingsGeneratorVirtualStrategy = function(_AppointmentSettingsG) {\r\n    _inheritsLoose(AppointmentSettingsGeneratorVirtualStrategy, _AppointmentSettingsG);\r\n\r\n    function AppointmentSettingsGeneratorVirtualStrategy() {\r\n        return _AppointmentSettingsG.apply(this, arguments) || this\r\n    }\r\n    var _proto3 = AppointmentSettingsGeneratorVirtualStrategy.prototype;\r\n    _proto3._createAppointmentInfos = function(gridAppointments, resources, allDay, recurrent) {\r\n        var _this7 = this;\r\n        var appointments = allDay ? gridAppointments : gridAppointments.filter(function(item) {\r\n            var source = item.source,\r\n                startDate = item.startDate,\r\n                endDate = item.endDate;\r\n            var groupIndex = source.groupIndex;\r\n            return _this7.viewDataProvider.isGroupIntersectDateInterval(groupIndex, startDate, endDate)\r\n        });\r\n        if (recurrent && this.isVerticalGrouping) {\r\n            return this._createRecurrentAppointmentInfos(appointments, resources, allDay)\r\n        }\r\n        return _AppointmentSettingsG.prototype._createAppointmentInfos.call(this, appointments, resources, allDay, recurrent)\r\n    };\r\n    _proto3._createRecurrentAppointmentInfos = function(gridAppointments, resources, allDay) {\r\n        var _this8 = this;\r\n        var result = [];\r\n        gridAppointments.forEach(function(appointment) {\r\n            var source = appointment.source;\r\n            var groupIndex = source.groupIndex;\r\n            var coordinate = _this8.workspace.getCoordinatesByDate(appointment.startDate, groupIndex, allDay);\r\n            if (coordinate) {\r\n                (0, _extend.extend)(coordinate, {\r\n                    info: {\r\n                        appointment: appointment,\r\n                        sourceAppointment: source\r\n                    }\r\n                });\r\n                result.push(coordinate)\r\n            }\r\n        });\r\n        return result\r\n    };\r\n    _proto3._cropAppointmentsByStartDayHour = function(appointments, rawAppointment, isAllDay) {\r\n        var _this9 = this;\r\n        return appointments.filter(function(appointment) {\r\n            var firstViewDate = _this9._getAppointmentFirstViewDate(appointment, rawAppointment);\r\n            if (!firstViewDate) {\r\n                return false\r\n            }\r\n            var startDayHour = _this9._getViewStartDayHour(firstViewDate);\r\n            var startDate = new Date(appointment.startDate);\r\n            appointment.startDate = _this9._getAppointmentResultDate({\r\n                appointment: appointment,\r\n                rawAppointment: rawAppointment,\r\n                startDate: startDate,\r\n                startDayHour: startDayHour,\r\n                firstViewDate: firstViewDate\r\n            });\r\n            return !isAllDay ? appointment.endDate > appointment.startDate : true\r\n        })\r\n    };\r\n    _proto3._createRecurrenceAppointments = function(appointment, resources) {\r\n        var _this10 = this;\r\n        var duration = appointment.duration;\r\n        var result = [];\r\n        var groupIndices = this.isVerticalGrouping && this.workspace._getGroupCount() ? this._getGroupIndices(resources) : [0];\r\n        groupIndices.forEach(function(groupIndex) {\r\n            var option = _this10._createRecurrenceOptions(appointment, groupIndex);\r\n            var generatedStartDates = (0, _recurrence.getRecurrenceProcessor)().generateDates(option);\r\n            var recurrentInfo = generatedStartDates.map(function(date) {\r\n                var startDate = new Date(date);\r\n                var utcDate = _utilsTimeZone.default.createUTCDateWithLocalOffset(date);\r\n                utcDate.setTime(utcDate.getTime() + duration);\r\n                var endDate = _utilsTimeZone.default.createDateFromUTCWithLocalOffset(utcDate);\r\n                return {\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    groupIndex: groupIndex\r\n                }\r\n            });\r\n            result.push.apply(result, _toConsumableArray(recurrentInfo))\r\n        });\r\n        return result\r\n    };\r\n    _proto3._getViewStartDayHour = function(firstViewDate) {\r\n        return firstViewDate.getHours()\r\n    };\r\n    _proto3._getAppointmentFirstViewDate = function(appointment, rawAppointment) {\r\n        var _this$scheduler$getWo = this.scheduler.getWorkSpace(),\r\n            viewDataProvider = _this$scheduler$getWo.viewDataProvider;\r\n        var groupIndex = appointment.source.groupIndex;\r\n        var startDate = appointment.startDate,\r\n            endDate = appointment.endDate;\r\n        var isAllDay = this._isAllDayAppointment(rawAppointment);\r\n        return viewDataProvider.findGroupCellStartDate(groupIndex, startDate, endDate, isAllDay)\r\n    };\r\n    _proto3._updateGroupIndices = function(appointments, itemResources) {\r\n        var _this11 = this;\r\n        var groupIndices = this.isVerticalGrouping ? this._getGroupIndices(itemResources) : [0];\r\n        var result = [];\r\n        groupIndices.forEach(function(groupIndex) {\r\n            var groupStartDate = _this11.viewDataProvider.getGroupStartDate(groupIndex);\r\n            if (groupStartDate) {\r\n                appointments.forEach(function(appointment) {\r\n                    var appointmentCopy = (0, _extend.extend)({}, appointment);\r\n                    appointmentCopy.groupIndex = groupIndex;\r\n                    result.push(appointmentCopy)\r\n                })\r\n            }\r\n        });\r\n        return result\r\n    };\r\n    _proto3._getGroupIndices = function(resources) {\r\n        var groupIndices = _AppointmentSettingsG.prototype._getGroupIndices.call(this, resources);\r\n        var _this$scheduler$getWo2 = this.scheduler.getWorkSpace(),\r\n            viewDataProvider = _this$scheduler$getWo2.viewDataProvider;\r\n        var viewDataGroupIndices = viewDataProvider.getGroupIndices();\r\n        var result = groupIndices.filter(function(groupIndex) {\r\n            return viewDataGroupIndices.indexOf(groupIndex) !== -1\r\n        });\r\n        return result\r\n    };\r\n    _proto3._createAppointments = function(appointment, resources) {\r\n        var appointments = _AppointmentSettingsG.prototype._createAppointments.call(this, appointment, resources);\r\n        return !appointment.isRecurrent ? this._updateGroupIndices(appointments, resources) : appointments\r\n    };\r\n    _createClass(AppointmentSettingsGeneratorVirtualStrategy, [{\r\n        key: \"viewDataProvider\",\r\n        get: function() {\r\n            return this.workspace.viewDataProvider\r\n        }\r\n    }, {\r\n        key: \"isVerticalGrouping\",\r\n        get: function() {\r\n            return this.workspace._isVerticalGroupedWorkSpace()\r\n        }\r\n    }]);\r\n    return AppointmentSettingsGeneratorVirtualStrategy\r\n}(AppointmentSettingsGeneratorBaseStrategy);\r\nexports.AppointmentSettingsGeneratorVirtualStrategy = AppointmentSettingsGeneratorVirtualStrategy;\r\n"]},"metadata":{},"sourceType":"script"}