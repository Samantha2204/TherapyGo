{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/index';\n\nconst fetchTimeList = async date => {\n  const url = `${config.baseUrl.dev}/date/${date}`;\n\n  try {\n    const timeList = await axios.get(url);\n    const timeListObj = timeList.data;\n    const availableTimeList = [];\n\n    for (const key in timeListObj) {\n      if (timeListObj[key]) {\n        availableTimeList.push(key);\n      }\n    }\n\n    return availableTimeList;\n  } catch (error) {\n    throw new Error(`Get time list error`, error);\n  }\n};\n\nconst fetchRoomName = async (myDate, startTime) => {\n  const url = `${config.baseUrl.dev}/date/${myDate}/startTime/${startTime}/duration/60`;\n\n  try {\n    const res = await axios.get(url);\n    const {\n      data: {\n        availableRooms,\n        code\n      }\n    } = res;\n\n    if (code === 200) {\n      return availableRooms[0];\n    }\n  } catch (error) {\n    throw new Error(`Fetch available room error`, error);\n  }\n\n  return null;\n};\n\nexport { fetchRoomName, fetchTimeList };","map":{"version":3,"sources":["/Users/sammi/Desktop/TherapyGo/src/api/clientBooking-api.js"],"names":["axios","config","fetchTimeList","date","url","baseUrl","dev","timeList","get","timeListObj","data","availableTimeList","key","push","error","Error","fetchRoomName","myDate","startTime","res","availableRooms","code"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;AACpC,QAAMC,GAAG,GAAI,GAAEH,MAAM,CAACI,OAAP,CAAeC,GAAI,SAAQH,IAAK,EAA/C;;AACA,MAAI;AACF,UAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUJ,GAAV,CAAvB;AACA,UAAMK,WAAW,GAAGF,QAAQ,CAACG,IAA7B;AACA,UAAMC,iBAAiB,GAAG,EAA1B;;AACA,SAAK,MAAMC,GAAX,IAAkBH,WAAlB,EAA+B;AAC7B,UAAIA,WAAW,CAACG,GAAD,CAAf,EAAsB;AACpBD,QAAAA,iBAAiB,CAACE,IAAlB,CAAuBD,GAAvB;AACD;AACF;;AACD,WAAOD,iBAAP;AACD,GAVD,CAUE,OAAOG,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAW,qBAAX,EAAiCD,KAAjC,CAAN;AACD;AACF,CAfD;;AAiBA,MAAME,aAAa,GAAG,OAAOC,MAAP,EAAeC,SAAf,KAA6B;AACjD,QAAMd,GAAG,GAAI,GAAEH,MAAM,CAACI,OAAP,CAAeC,GAAI,SAAQW,MAAO,cAAaC,SAAU,cAAxE;;AACA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACQ,GAAN,CAAUJ,GAAV,CAAlB;AACA,UAAM;AACJM,MAAAA,IAAI,EAAE;AAAEU,QAAAA,cAAF;AAAkBC,QAAAA;AAAlB;AADF,QAEFF,GAFJ;;AAGA,QAAIE,IAAI,KAAK,GAAb,EAAkB;AAChB,aAAOD,cAAc,CAAC,CAAD,CAArB;AACD;AACF,GARD,CAQE,OAAON,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAW,4BAAX,EAAwCD,KAAxC,CAAN;AACD;;AACD,SAAO,IAAP;AACD,CAdD;;AAgBA,SAASE,aAAT,EAAwBd,aAAxB","sourcesContent":["import axios from 'axios';\nimport config from '../config/index';\n\nconst fetchTimeList = async (date) => {\n  const url = `${config.baseUrl.dev}/date/${date}`;\n  try {\n    const timeList = await axios.get(url);\n    const timeListObj = timeList.data;\n    const availableTimeList = [];\n    for (const key in timeListObj) {\n      if (timeListObj[key]) {\n        availableTimeList.push(key);\n      }\n    }\n    return availableTimeList;\n  } catch (error) {\n    throw new Error(`Get time list error`, error);\n  }\n};\n\nconst fetchRoomName = async (myDate, startTime) => {\n  const url = `${config.baseUrl.dev}/date/${myDate}/startTime/${startTime}/duration/60`;\n  try {\n    const res = await axios.get(url);\n    const {\n      data: { availableRooms, code },\n    } = res;\n    if (code === 200) {\n      return availableRooms[0];\n    }\n  } catch (error) {\n    throw new Error(`Fetch available room error`, error);\n  }\n  return null;\n};\n\nexport { fetchRoomName, fetchTimeList };\n"]},"metadata":{},"sourceType":"module"}