{"ast":null,"code":"var _jsxFileName = \"/Users/sammi/Desktop/TherapyGo/src/pages/ClientOnePage/Components/Booking/AvailableTimeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\nimport { Button } from '@material-ui/core';\nimport './timeList.scss';\nimport CustomerAppointmentForm from './CustomerAppointmentForm';\nimport { fetchRoomName } from '../../../../api/clientBooking-api';\nimport SeparationLine from '../DecorativeElements/SeparationLine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AvailableTimeList = props => {\n  _s();\n\n  const {\n    timeList,\n    myDate\n  } = props;\n  const [room, setRoom] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [showAppointmentForm, setShowAppointmentForm] = useState(false);\n\n  const handlePropagation = e => {\n    e.stopPropagation();\n  };\n\n  const showRef = useRef();\n  showRef.current = showAppointmentForm;\n\n  const handleClick = (e, time, fetchDate) => {\n    setShowAppointmentForm(true);\n    const serviceStartTime = time.split('-')[0];\n    setStartTime(serviceStartTime);\n    fetchRoomName(fetchDate, serviceStartTime).then(res => setRoom(res)).catch(error => {\n      throw new Error(`Available Time List - handle click ${error}`);\n    });\n  };\n\n  const cancelModal = () => {\n    setShowAppointmentForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handlePropagation,\n    onKeyDown: handlePropagation,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blankSpace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [' ', \"Available Appointments on\", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: myDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), !timeList && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: timeList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SeparationLine, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"timeItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faClock,\n                color: \"#73d6ca\",\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: e => handleClick(e, item, myDate),\n              children: \"Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), showAppointmentForm && /*#__PURE__*/_jsxDEV(CustomerAppointmentForm, {\n      data: [myDate, startTime, room],\n      cancelModal: () => cancelModal()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableTimeList, \"rtbmQN5SoQjucq9X3GceF0vOXbU=\");\n\n_c = AvailableTimeList;\nexport default AvailableTimeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableTimeList\");","map":{"version":3,"sources":["/Users/sammi/Desktop/TherapyGo/src/pages/ClientOnePage/Components/Booking/AvailableTimeList.js"],"names":["React","useState","useRef","FontAwesomeIcon","faClock","Button","CustomerAppointmentForm","fetchRoomName","SeparationLine","AvailableTimeList","props","timeList","myDate","room","setRoom","startTime","setStartTime","showAppointmentForm","setShowAppointmentForm","handlePropagation","e","stopPropagation","showRef","current","handleClick","time","fetchDate","serviceStartTime","split","then","res","catch","error","Error","cancelModal","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\nimport { Button } from '@material-ui/core';\nimport './timeList.scss';\nimport CustomerAppointmentForm from './CustomerAppointmentForm';\nimport { fetchRoomName } from '../../../../api/clientBooking-api';\nimport SeparationLine from '../DecorativeElements/SeparationLine';\n\nexport const AvailableTimeList = (props) => {\n  const { timeList, myDate } = props;\n  const [room, setRoom] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [showAppointmentForm, setShowAppointmentForm] = useState(false);\n\n  const handlePropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  const showRef = useRef();\n  showRef.current = showAppointmentForm;\n\n  const handleClick = (e, time, fetchDate) => {\n    setShowAppointmentForm(true);\n    const serviceStartTime = time.split('-')[0];\n    setStartTime(serviceStartTime);\n    fetchRoomName(fetchDate, serviceStartTime)\n      .then((res) => setRoom(res))\n      .catch((error) => {\n        throw new Error(`Available Time List - handle click ${error}`);\n      });\n  };\n\n  const cancelModal = () => {\n    setShowAppointmentForm(false);\n  };\n\n  return (\n    <div onClick={handlePropagation} onKeyDown={handlePropagation}>\n      <div className=\"blankSpace\" />\n      <div className=\"timeList\">\n        <p>\n          {' '}\n          Available Appointments on \n          <b>{myDate}</b>\n        </p>\n        {!timeList && <p>Loading</p>}\n        <ul>\n          {timeList.map((item, index) => (\n            <div key={index}>\n              <SeparationLine />\n              <li key={index} className=\"timeItem\">\n                <div>\n                  <FontAwesomeIcon icon={faClock} color=\"#73d6ca\" spin />\n                  &nbsp; &nbsp;\n                  <span>{item}</span>\n                </div>\n                <Button variant=\"outlined\" onClick={(e) => handleClick(e, item, myDate)}>\n                  Book\n                </Button>\n              </li>\n            </div>\n          ))}\n        </ul>\n      </div>\n      {showAppointmentForm && (\n        <CustomerAppointmentForm\n          data={[myDate, startTime, room]}\n          cancelModal={() => cancelModal()}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AvailableTimeList;\n"]},"metadata":{},"sourceType":"module"}