{"ast":null,"code":"var _jsxFileName = \"/Users/sammi/Desktop/TherapyGo/src/pages/ProfilePage/Components/UserInformationTable/UserInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './UserInformation.scss';\nimport { TextField, Button } from '@material-ui/core/';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { fetchUserProfile } from '../../../../store/actions/userProfileActions';\nimport { updateUserInformation } from '../../../../api/userProfile';\nimport { theme } from '../../../../colour';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInformation = props => {\n  _s();\n\n  const [isDisabled, setIsDisabled] = useState(true);\n  const {\n    userInformation\n  } = props;\n  const [customerData, setCustomerData] = useState([]);\n  const history = useHistory();\n  const customerIdls = sessionStorage.getItem('customer_id');\n  const payload = {\n    customerId: customerIdls\n  };\n  useEffect(() => {\n    if (JSON.stringify(userInformation) !== '{}') {\n      setCustomerData(userInformation);\n    }\n  }, [userInformation]);\n\n  const handleChange = event => {\n    setCustomerData({ ...customerData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateUserInformation(customerData._id, customerData).then(res => {\n      if (res.status === 200) {\n        Swal.fire('Information Updated!', 'The information has been successfully updated.', 'success');\n        history.replace('/userProfile/MyProfile');\n        setIsDisabled(!isDisabled);\n      } else {\n        Swal.fire('Information Update Failed!', 'Update failed. Please try again!', 'error');\n      }\n\n      props.fetchUserProfile(payload);\n    });\n  };\n\n  const handleDisabled = e => {\n    e.preventDefault();\n    setIsDisabled(!isDisabled);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"user-information\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Personal Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        disabled: isDisabled,\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        type: \"text\",\n        label: \"First Name\",\n        name: \"firstName\",\n        value: customerData.firstName || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: isDisabled,\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        type: \"text\",\n        label: \"Last Name\",\n        name: \"lastName\",\n        value: customerData.lastName || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: \"selection\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          native: true,\n          disabled: isDisabled,\n          onChange: handleChange,\n          label: \"Gender\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            \"aria-label\": \"None\",\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Male\",\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Female\",\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: isDisabled,\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        type: \"number\",\n        label: \"Phone Number\",\n        name: \"mobile\",\n        value: customerData.mobile || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: isDisabled,\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        type: \"email\",\n        label: \"Your Email\",\n        name: \"email\",\n        value: customerData.email || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), isDisabled ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: \"button\",\n        onClick: handleDisabled,\n        children: \"Edit Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        className: \"button\",\n        children: \"Save Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserInformation, \"ZnxRc8sS/RndP8ZsUZKo1QDCoNo=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserInformation;\n\nconst mapStateToProps = state => {\n  const {\n    userProfile\n  } = state;\n  const {\n    userInformation,\n    orderHistory\n  } = userProfile;\n  return {\n    userInformation,\n    orderHistory\n  };\n};\n\nconst mapActionsToProps = {\n  fetchUserProfile\n};\nexport default connect(mapStateToProps, mapActionsToProps)(UserInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInformation\");","map":{"version":3,"sources":["/Users/sammi/Desktop/TherapyGo/src/pages/ProfilePage/Components/UserInformationTable/UserInformation.js"],"names":["React","useEffect","useState","TextField","Button","ThemeProvider","InputLabel","FormControl","Select","connect","useHistory","Swal","fetchUserProfile","updateUserInformation","theme","UserInformation","props","isDisabled","setIsDisabled","userInformation","customerData","setCustomerData","history","customerIdls","sessionStorage","getItem","payload","customerId","JSON","stringify","handleChange","event","target","name","value","handleSubmit","e","preventDefault","_id","then","res","status","fire","replace","handleDisabled","firstName","lastName","mobile","email","mapStateToProps","state","userProfile","orderHistory","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './UserInformation.scss';\nimport { TextField, Button } from '@material-ui/core/';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { connect } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { fetchUserProfile } from '../../../../store/actions/userProfileActions';\nimport { updateUserInformation } from '../../../../api/userProfile';\nimport { theme } from '../../../../colour';\n\nconst UserInformation = (props) => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const {userInformation} = props;\n  const [customerData, setCustomerData] = useState([]);\n  const history = useHistory();\n  const customerIdls = sessionStorage.getItem('customer_id');\n\n  const payload = { customerId: customerIdls };\n\n  useEffect(() => {\n    if (JSON.stringify(userInformation) !== '{}') {\n      setCustomerData(userInformation);\n    }\n  }, [userInformation]);\n\n  const handleChange = (event) => {\n    setCustomerData({ ...customerData, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateUserInformation(customerData._id, customerData).then((res) => {\n      if (res.status === 200) {\n        Swal.fire(\n          'Information Updated!',\n          'The information has been successfully updated.',\n          'success',\n        );\n        history.replace('/userProfile/MyProfile');\n        setIsDisabled(!isDisabled);\n      } else {\n        Swal.fire('Information Update Failed!', 'Update failed. Please try again!', 'error');\n      }\n      props.fetchUserProfile(payload);\n    });\n  };\n\n  const handleDisabled = (e) => {\n    e.preventDefault();\n    setIsDisabled(!isDisabled);\n    \n  };\n\n  return (\n    <form className=\"user-information\" onSubmit={handleSubmit}>\n      <h2>Personal Information</h2>\n      <ThemeProvider theme={theme}>\n        <TextField\n          disabled={isDisabled}\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          type=\"text\"\n          label=\"First Name\"\n          name=\"firstName\"\n          value={customerData.firstName || ''}\n          onChange={handleChange}\n        />\n        <TextField\n          disabled={isDisabled}\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          type=\"text\"\n          label=\"Last Name\"\n          name=\"lastName\"\n          value={customerData.lastName || ''}\n          onChange={handleChange}\n        />\n        <FormControl variant=\"outlined\" className=\"selection\">\n          <InputLabel>Gender</InputLabel>\n          <Select native disabled={isDisabled} onChange={handleChange} label=\"Gender\">\n            <option aria-label=\"None\" value=\"\" />\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n          </Select>\n        </FormControl>\n        <TextField\n          disabled={isDisabled}\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          type=\"number\"\n          label=\"Phone Number\"\n          name=\"mobile\"\n          value={customerData.mobile || ''}\n          onChange={handleChange}\n        />\n        <TextField\n          disabled={isDisabled}\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          type=\"email\"\n          label=\"Your Email\"\n          name=\"email\"\n          value={customerData.email || ''}\n          onChange={handleChange}\n        />\n        {isDisabled ? (\n          <Button variant=\"contained\" className=\"button\" onClick={handleDisabled}>\n            Edit Information\n          </Button>\n        ) : (\n          <Button type=\"submit\" variant=\"contained\" className=\"button\">\n            Save Change\n          </Button>\n        )}\n      </ThemeProvider>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { userProfile } = state;\n  const { userInformation, orderHistory } = userProfile;\n  return {\n    userInformation,\n    orderHistory,\n  };\n};\n\nconst mapActionsToProps = {\n  fetchUserProfile,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(UserInformation);\n"]},"metadata":{},"sourceType":"module"}