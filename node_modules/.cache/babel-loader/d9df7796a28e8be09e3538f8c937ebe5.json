{"ast":null,"code":"var _jsxFileName = \"/Users/sammi/Desktop/TherapyGo/src/components/reusableComponent/Input.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from '../../colour';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  const {\n    autoFocus,\n    name,\n    label,\n    value,\n    onChange,\n    type,\n    error = null,\n    onClick\n  } = props;\n  let toggle = false;\n  let errorMsg = null;\n\n  if (error) {\n    toggle = true;\n    errorMsg = error;\n  } else {\n    toggle = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      size: \"small\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      autoFocus: autoFocus,\n      type: type,\n      name: name,\n      label: label,\n      value: value,\n      onChange: onChange,\n      onClick: onClick,\n      error: toggle,\n      helperText: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/sammi/Desktop/TherapyGo/src/components/reusableComponent/Input.js"],"names":["React","TextField","ThemeProvider","theme","Input","props","autoFocus","name","label","value","onChange","type","error","onClick","toggle","errorMsg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,KAAT,QAAsB,cAAtB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA,IAA3C;AAAiDC,IAAAA,KAAK,GAAG,IAAzD;AAA+DC,IAAAA;AAA/D,MAA2ER,KAAjF;AACA,MAAIS,MAAM,GAAG,KAAb;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,MAAIH,KAAJ,EAAW;AACTE,IAAAA,MAAM,GAAG,IAAT;AACAC,IAAAA,QAAQ,GAAGH,KAAX;AACD,GAHD,MAGO;AACLE,IAAAA,MAAM,GAAG,KAAT;AACD;;AACD,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEX,KAAtB;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,SAAS,MALX;AAME,MAAA,SAAS,EAAEG,SANb;AAOE,MAAA,IAAI,EAAEK,IAPR;AAQE,MAAA,IAAI,EAAEJ,IARR;AASE,MAAA,KAAK,EAAEC,KATT;AAUE,MAAA,KAAK,EAAEC,KAVT;AAWE,MAAA,QAAQ,EAAEC,QAXZ;AAYE,MAAA,OAAO,EAAEG,OAZX;AAaE,MAAA,KAAK,EAAEC,MAbT;AAcE,MAAA,UAAU,EAAEC;AAdd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA9BD;;KAAMX,K;AAgCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from '../../colour';\n\nconst Input = (props) => {\n  const { autoFocus, name, label, value, onChange, type, error = null, onClick } = props;\n  let toggle = false;\n  let errorMsg = null;\n  if (error) {\n    toggle = true;\n    errorMsg = error;\n  } else {\n    toggle = false;\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        margin=\"normal\"\n        required\n        fullWidth\n        autoFocus={autoFocus}\n        type={type}\n        name={name}\n        label={label}\n        value={value}\n        onChange={onChange}\n        onClick={onClick}\n        error={toggle}\n        helperText={errorMsg}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}