{"ast":null,"code":"var _jsxFileName = \"/Users/sammi/Desktop/TherapyGo/src/pages/WorksheetPage/Components/Worksheet/Worksheet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Worksheet.scss';\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport Scheduler, { Resource } from 'devextreme-react/scheduler';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { roomData } from './data';\nimport Appointment from './Components/Appointment';\nimport AppointmentForm from '../../../../components/newAppointment/AppointmentForm';\nimport EditAppointmentForm from '../../../../components/EditAppointment/EditAppointmentForm';\nimport { fetchStaffList, fetchExistAppointment, fetchNotification } from '../../../../store/actions/worksheetActions';\nimport AppointmentTooltip from './Components/AppointmentTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst views = ['day'];\nconst group = ['roomId'];\n\nconst Worksheet = props => {\n  _s();\n\n  const [dataL, setDataL] = useState([]);\n  const [staffL, setStaffL] = useState([]);\n  const {\n    date,\n    staffList,\n    existAppointment\n  } = props;\n  useEffect(() => {\n    setStaffL(props.staffList);\n    setDataL(props.existAppointment);\n  }, [staffList, existAppointment]);\n\n  const handleDblClickAppointment = e => {\n    if (e.appointmentElement) {\n      e.cancel = true;\n      const {\n        therapistName,\n        roomId,\n        serviceId,\n        serviceType,\n        bodyParts,\n        mobileNumber,\n        customerName,\n        paymentMethod,\n        treatmentPrice\n      } = e.appointmentData;\n      const startDate = e.appointmentData.startDate.slice(0, 10);\n      const startTime = e.appointmentData.startDate.slice(11, 19);\n\n      const editForm = /*#__PURE__*/_jsxDEV(EditAppointmentForm, {\n        startDate: startDate,\n        startTime: startTime,\n        roomId: `table${roomId}`,\n        sourceData: dataL,\n        refreshPage: props.fetchExistAppointment,\n        therapist: therapistName,\n        serviceId: serviceId,\n        serviceType: serviceType,\n        bodyParts: bodyParts,\n        mobileNumber: mobileNumber,\n        customerName: customerName,\n        paymentType: paymentMethod,\n        treatmentPrice: treatmentPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n\n      ReactDOM.hydrate(editForm, document.getElementById('appointPage'));\n    }\n  };\n\n  const handleCellClick = e => {\n    const ddd = e.cellData.startDate.toLocaleDateString().slice(0, 10);\n    const startDay = `${ddd.slice(6, 10)}-${ddd.slice(3, 5)}-${ddd.slice(0, 2)}`;\n\n    const appform = /*#__PURE__*/_jsxDEV(AppointmentForm, {\n      startDate: startDay,\n      startTime: e.cellData.startDate.toLocaleTimeString(),\n      roomId: `table${e.cellData.groups.roomId}`,\n      sourceData: dataL,\n      refreshPage: props.fetchExistAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n\n    ReactDOM.hydrate(appform, document.getElementById('appointPage'));\n  };\n\n  const renderWorksheet = () => /*#__PURE__*/_jsxDEV(Scheduler, {\n    dataSource: dataL,\n    currentDate: date,\n    views: views,\n    defaultCurrentView: \"day\",\n    groups: group,\n    startDayHour: 8,\n    endDayHour: 18,\n    showAllDayPanel: false,\n    crossScrollingEnabled: false,\n    cellDuration: 10,\n    editing: {\n      allowAdding: false,\n      allowUpdating: false,\n      allowDeleting: false,\n      allowDragging: false\n    },\n    onAppointmentDblClick: handleDblClickAppointment,\n    onCellClick: handleCellClick,\n    height: \"100%\",\n    appointmentTooltipComponent: AppointmentTooltip,\n    appointmentComponent: Appointment,\n    children: [/*#__PURE__*/_jsxDEV(Resource, {\n      dataSource: roomData,\n      fieldExpr: \"roomId\",\n      label: \"Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      dataSource: staffL,\n      fieldExpr: \"staffId\",\n      label: \"Staff\",\n      useColorAsDefault: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"worksheetContainer\",\n    children: renderWorksheet()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Worksheet, \"A/CJ7ZKUbsMv+A5ydtRPIzGJPFU=\");\n\n_c = Worksheet;\n\nconst mapStateToProps = state => {\n  const {\n    workSheet\n  } = state;\n  const {\n    staffList,\n    existAppointment\n  } = workSheet;\n  return {\n    staffList,\n    existAppointment\n  };\n};\n\nconst mapActionsToProps = {\n  fetchStaffList,\n  fetchExistAppointment,\n  fetchNotification\n};\nexport default connect(mapStateToProps, mapActionsToProps)(Worksheet);\n\nvar _c;\n\n$RefreshReg$(_c, \"Worksheet\");","map":{"version":3,"sources":["/Users/sammi/Desktop/TherapyGo/src/pages/WorksheetPage/Components/Worksheet/Worksheet.js"],"names":["React","useState","useEffect","Scheduler","Resource","ReactDOM","connect","roomData","Appointment","AppointmentForm","EditAppointmentForm","fetchStaffList","fetchExistAppointment","fetchNotification","AppointmentTooltip","views","group","Worksheet","props","dataL","setDataL","staffL","setStaffL","date","staffList","existAppointment","handleDblClickAppointment","e","appointmentElement","cancel","therapistName","roomId","serviceId","serviceType","bodyParts","mobileNumber","customerName","paymentMethod","treatmentPrice","appointmentData","startDate","slice","startTime","editForm","hydrate","document","getElementById","handleCellClick","ddd","cellData","toLocaleDateString","startDay","appform","toLocaleTimeString","groups","renderWorksheet","allowAdding","allowUpdating","allowDeleting","allowDragging","mapStateToProps","state","workSheet","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Worksheet.scss';\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport Scheduler, { Resource } from 'devextreme-react/scheduler';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { roomData } from './data';\nimport Appointment from './Components/Appointment';\nimport AppointmentForm from '../../../../components/newAppointment/AppointmentForm';\nimport EditAppointmentForm from '../../../../components/EditAppointment/EditAppointmentForm';\nimport {\n  fetchStaffList,\n  fetchExistAppointment,\n  fetchNotification,\n} from '../../../../store/actions/worksheetActions';\nimport AppointmentTooltip from './Components/AppointmentTooltip';\n\nconst views = ['day'];\nconst group = ['roomId'];\n\nconst Worksheet = (props) => {\n  const [dataL, setDataL] = useState([]);\n  const [staffL, setStaffL] = useState([]);\n  const { date, staffList, existAppointment } = props;\n\n  useEffect(() => {\n    setStaffL(props.staffList);\n    setDataL(props.existAppointment);\n  }, [staffList, existAppointment]);\n\n  const handleDblClickAppointment = (e) => {\n    if (e.appointmentElement) {\n      e.cancel = true;\n      const {\n        therapistName,\n        roomId,\n        serviceId,\n        serviceType,\n        bodyParts,\n        mobileNumber,\n        customerName,\n        paymentMethod,\n        treatmentPrice,\n      } = e.appointmentData;\n      const startDate = e.appointmentData.startDate.slice(0, 10);\n      const startTime = e.appointmentData.startDate.slice(11, 19);\n      const editForm = (\n        <EditAppointmentForm\n          startDate={startDate}\n          startTime={startTime}\n          roomId={`table${roomId}`}\n          sourceData={dataL}\n          refreshPage={props.fetchExistAppointment}\n          therapist={therapistName}\n          serviceId={serviceId}\n          serviceType={serviceType}\n          bodyParts={bodyParts}\n          mobileNumber={mobileNumber}\n          customerName={customerName}\n          paymentType={paymentMethod}\n          treatmentPrice={treatmentPrice}\n        />\n      );\n      ReactDOM.hydrate(editForm, document.getElementById('appointPage'));\n    }\n  };\n\n  const handleCellClick = (e) => {\n    const ddd = e.cellData.startDate.toLocaleDateString().slice(0, 10);\n    const startDay = `${ddd.slice(6, 10)}-${ddd.slice(3, 5)}-${ddd.slice(0, 2)}`;\n    const appform = (\n      <AppointmentForm\n        startDate={startDay}\n        startTime={e.cellData.startDate.toLocaleTimeString()}\n        roomId={`table${e.cellData.groups.roomId}`}\n        sourceData={dataL}\n        refreshPage={props.fetchExistAppointment}\n      />\n    );\n    ReactDOM.hydrate(appform, document.getElementById('appointPage'));\n  };\n\n  const renderWorksheet = () => (\n    <Scheduler\n      dataSource={dataL}\n      currentDate={date}\n      views={views}\n      defaultCurrentView=\"day\"\n      groups={group}\n      startDayHour={8}\n      endDayHour={18}\n      showAllDayPanel={false}\n      crossScrollingEnabled={false}\n      cellDuration={10}\n      editing={{\n        allowAdding: false,\n        allowUpdating: false,\n        allowDeleting: false,\n        allowDragging: false,\n      }}\n      onAppointmentDblClick={handleDblClickAppointment}\n      onCellClick={handleCellClick}\n      height=\"100%\"\n      appointmentTooltipComponent={AppointmentTooltip}\n      appointmentComponent={Appointment}\n    >\n      <Resource dataSource={roomData} fieldExpr=\"roomId\" label=\"Room\" />\n      <Resource dataSource={staffL} fieldExpr=\"staffId\" label=\"Staff\" useColorAsDefault=\"true\" />\n    </Scheduler>\n  );\n\n  return <div className=\"worksheetContainer\">{renderWorksheet()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  const { workSheet } = state;\n  const { staffList, existAppointment } = workSheet;\n  return {\n    staffList,\n    existAppointment,\n  };\n};\nconst mapActionsToProps = {\n  fetchStaffList,\n  fetchExistAppointment,\n  fetchNotification,\n};\nexport default connect(mapStateToProps, mapActionsToProps)(Worksheet);\n"]},"metadata":{},"sourceType":"module"}